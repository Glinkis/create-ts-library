{"version":3,"file":"jslib.js","sources":["../src/animation/easing/linear.ts","../src/animation/easing/easeInSine.ts","../src/animation/easing/easeOutSine.ts","../src/animation/easing/easeInOutSine.ts","../src/animation/easing/easeInQuad.ts","../src/animation/easing/easeOutQuad.ts","../src/animation/easing/easeInOutQuad.ts","../src/animation/easing/easeInCubic.ts","../src/animation/easing/easeOutCubic.ts","../src/animation/easing/easeInOutCubic.ts","../src/animation/easing/easeInQuart.ts","../src/animation/easing/easeOutQuart.ts","../src/animation/easing/easeInOutQuart.ts","../src/animation/easing/easeInQuint.ts","../src/animation/easing/easeOutQuint.ts","../src/animation/easing/easeInOutQuint.ts","../src/animation/easing/easeInExpo.ts","../src/animation/easing/easeOutExpo.ts","../src/animation/easing/easeInOutExpo.ts","../src/animation/easing/easeInCirc.ts","../src/animation/easing/easeOutCirc.ts","../src/animation/easing/easeInOutCirc.ts","../src/animation/transition.ts","../src/array/getClosestNumber.ts","../src/array/intersperse.ts","../src/array/nodeListToArray.ts","../src/color/hexToRgba.ts","../src/color/hslToRgb.ts","../src/color/rgbaToHex.ts","../src/color/rgbToHsl.ts","../src/dom/getElementPositionInContainer.ts","../src/dom/getElementAbsolutePosition.ts","../src/interactivity/InteractionData.ts","../src/interactivity/addDragInteraction.ts","../src/math/clampMax.ts","../src/math/clampMin.ts","../src/math/clamp.ts","../src/math/decimalPlaces.ts","../src/math/degreeToRadian.ts","../src/math/inRange.ts","../src/math/lerp.ts","../src/math/mapToRange.ts","../src/math/radianToDegree.ts","../src/math/randomRange.ts","../src/math/randomInt.ts","../src/math/randomString.ts","../src/math/round.ts","../src/math/wrap.ts","../src/misc/getDevicePixelRatio.ts","../src/misc/IsMobile.ts","../src/splines/bezier.ts","../src/splines/catmullRom.ts","../src/splines/hermite.ts","../src/vector2/add.ts","../src/vector2/distance.ts","../src/vector2/divide.ts","../src/vector2/dot.ts","../src/vector2/length.ts","../src/vector2/multiply.ts","../src/vector2/negate.ts","../src/vector2/pointIntersection.ts","../src/vector2/positionAroundVector2.ts","../src/vector2/scale.ts","../src/vector2/subtract.ts","../src/vector2/traverse.ts","../src/vector3/add.ts","../src/vector3/distance.ts","../src/vector3/divide.ts","../src/vector3/dot.ts","../src/vector3/length.ts","../src/vector3/multiply.ts","../src/vector3/negate.ts","../src/vector3/pointIntersection.ts","../src/vector3/positionAroundVector3.ts","../src/vector3/scale.ts","../src/vector3/subtract.ts","../src/vector3/traverse.ts"],"sourcesContent":["/**\r\n * No easing, no acceleration.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function linear(t: number) {\r\n  return t;\r\n}\r\n","/**\r\n * Slight acceleration from zero to full speed.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInSine(t: number) {\r\n  return -1 * Math.cos(t * (Math.PI / 2)) + 1;\r\n}\r\n","/**\r\n * Slight deceleration at the end.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutSine(t: number) {\r\n  return Math.sin(t * (Math.PI / 2));\r\n}\r\n","/**\r\n * Slight acceleration at beginning and slight deceleration at end.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutSine(t: number) {\r\n  return -0.5 * (Math.cos(Math.PI * t) - 1);\r\n}\r\n","/**\r\n * Accelerates from zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInQuad(t: number) {\r\n  return t * t;\r\n}\r\n","/**\r\n * Decelerates to zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutQuad(t: number) {\r\n  return t * (2 - t);\r\n}\r\n","/**\r\n * Accelerates until halfway, then decelerates.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutQuad(t: number) {\r\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n}\r\n","/**\r\n * Accelerates from zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInCubic(t: number) {\r\n  return t * t * t;\r\n}\r\n","/**\r\n * Decelerates to zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutCubic(t: number) {\r\n  const t1 = t - 1;\r\n  return t1 * t1 * t1 + 1;\r\n}\r\n","/**\r\n * Accelerates until halfway, then decelerates.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutCubic(t: number) {\r\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n}\r\n","/**\r\n * Accelerates from zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInQuart(t: number) {\r\n  return t * t * t * t;\r\n}\r\n","/**\r\n * Decelerates to zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutQuart(t: number) {\r\n  const t1 = t - 1;\r\n  return 1 - t1 * t1 * t1 * t1;\r\n}\r\n","/**\r\n * Accelerates until halfway, then decelerates.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutQuart(t: number) {\r\n  const t1 = t - 1;\r\n  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1;\r\n}\r\n","/**\r\n * Accelerates from zero velocity..\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInQuint(t: number) {\r\n  return t * t * t * t * t;\r\n}\r\n","/**\r\n * Decelerates to zero velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutQuint(t: number) {\r\n  const t1 = t - 1;\r\n  return 1 + t1 * t1 * t1 * t1 * t1;\r\n}\r\n","/**\r\n * Accelerates until halfway, then decelerates.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutQuint(t: number) {\r\n  const t1 = t - 1;\r\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1;\r\n}\r\n","/**\r\n * Accelerates exponentially until finish.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInExpo(t: number) {\r\n  return t === 0 ? 0 : 2 ** (10 * (t - 1));\r\n}\r\n","/**\r\n * Initial exponential acceleration slowing to stop.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutExpo(t: number) {\r\n  return t === 1 ? 1 : -(2 ** (-10 * t)) + 1;\r\n}\r\n","/**\r\n * Exponential acceleration and deceleration.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutExpo(t: number) {\r\n  if (t === 0 || t === 1) {\r\n    return t;\r\n  }\r\n\r\n  const a = t * 2;\r\n  const b = a - 1;\r\n\r\n  if (a < 1) {\r\n    return 0.5 * 2 ** (10 * b);\r\n  }\r\n\r\n  return 0.5 * (-(2 ** (-10 * b)) + 2);\r\n}\r\n","/**\r\n * Increases velocity until stop.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInCirc(t: number) {\r\n  return -1 * (Math.sqrt(1 - t * t) - 1);\r\n}\r\n","/**\r\n * Start fast, then decreases velocity until stop.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeOutCirc(t: number) {\r\n  const t1 = t - 1;\r\n  return Math.sqrt(1 - t1 * t1);\r\n}\r\n","/**\r\n * Fast increase in velocity, fast decrease in velocity.\r\n *\r\n * @param t - [0-1]\r\n */\r\nexport function easeInOutCirc(t: number) {\r\n  const a = t * 2;\r\n  const b = a - 2;\r\n\r\n  if (a < 1) {\r\n    return -0.5 * (Math.sqrt(1 - a * a) - 1);\r\n  }\r\n\r\n  return 0.5 * (Math.sqrt(1 - b * b) + 1);\r\n}\r\n","import { linear } from \"../animation/easing\";\r\n\r\n/**\r\n * Changes a value over time, running a callback with the current value at every frame.\r\n *\r\n * @param startValue - Start value.\r\n * @param endValue - End value.\r\n * @param duration - Time of the transition. (ms)\r\n * @param callback - Executes every step of the transition.\r\n * @param easing - Easing method.\r\n */\r\nexport function transition(\r\n  startValue: number,\r\n  endValue: number,\r\n  duration: number,\r\n  callback: (value: number) => void,\r\n  easing: (t: number) => number = linear\r\n) {\r\n  let animationFrame: number;\r\n  let startTime: number;\r\n  let value = startValue;\r\n\r\n  function done() {\r\n    window.cancelAnimationFrame(animationFrame);\r\n    value = endValue;\r\n  }\r\n\r\n  function increment(progress: number) {\r\n    const diff = endValue - startValue;\r\n    value = easing(progress / duration * diff + startValue);\r\n    if (value >= endValue) {\r\n      done();\r\n    }\r\n  }\r\n\r\n  function decrement(progress: number) {\r\n    const diff = startValue - endValue;\r\n    value = easing(progress / duration * -diff + startValue);\r\n    if (value <= endValue) {\r\n      done();\r\n    }\r\n  }\r\n\r\n  function step(timestamp: number) {\r\n    animationFrame = window.requestAnimationFrame(step);\r\n\r\n    if (!startTime) {\r\n      startTime = timestamp;\r\n    }\r\n\r\n    const progress = timestamp - startTime;\r\n    (startValue < endValue ? increment : decrement)(progress);\r\n\r\n    if (typeof callback === \"function\") {\r\n      callback(value);\r\n    }\r\n  }\r\n\r\n  if (startValue !== endValue) {\r\n    animationFrame = window.requestAnimationFrame(step);\r\n  } else {\r\n    callback(value);\r\n  }\r\n}\r\n","/**\r\n * Returns the closest number out of an array.\r\n *\r\n * @param array - The array to search in.\r\n * @param num - The number to search for the closest to.\r\n *\r\n * @example\r\n * // Returns 10\r\n * getClosestNumber([0, 10, 20], 12);\r\n */\r\nexport function getClosestNumber(array: number[], num: number) {\r\n  return array.reduce(\r\n    (previous, current) =>\r\n      Math.abs(current - num) < Math.abs(previous - num)\r\n        ? current\r\n        : previous\r\n  );\r\n}\r\n","/**\r\n * Return an array with the separator interspersed between\r\n * each element of the input array.\r\n *\r\n * @param array - Array to intersperse.\r\n * @param separator - Value to insert.\r\n *\r\n * @example\r\n * intersperse([\"a\", \"b\", \"c\"], \"x\"); // => [\"a\", \"x\", \"b\", \"x\", \"c\"]\r\n */\r\nexport function intersperse(array: any[], separator: any): any[] {\r\n  if (array.length === 0) {\r\n    return [];\r\n  }\r\n\r\n  return array\r\n    .slice(1)\r\n    .reduce((acc, val) => acc.concat([separator, val]), [array[0]]);\r\n}\r\n","/**\r\n * Converts a NodeList to an Array.\r\n *\r\n * @param nodeList - A NodeList.\r\n *\r\n * @example\r\n * // => [div, div, …]\r\n * toArray(document.querySelectorAll('div'));\r\n */\r\nexport function nodeListToArray(nodeList: NodeList): any[] {\r\n  return Array.prototype.slice.call(nodeList);\r\n}\r\n","/**\r\n * Converts a hex string to a color.\r\n * If it can't be converted null is returned.\r\n *\r\n * @param hex - A hexadecimal color string. (i.e. #CCCCCCFF or CCCCCC)\r\n */\r\nexport function hexToRgba(hex: string) {\r\n  hex = hex.replace(\"#\", \"\");\r\n  const r = parseInt(hex.substring(0, 2), 16);\r\n  const g = parseInt(hex.substring(2, 4), 16);\r\n  const b = parseInt(hex.substring(4, 6), 16);\r\n\r\n  if (hex.length === 6) {\r\n    return { r, g, b };\r\n  } else if (hex.length === 8) {\r\n    return {\r\n      r,\r\n      g,\r\n      b,\r\n      a: parseInt(hex.substring(6, 8), 16)\r\n    };\r\n  }\r\n  return null;\r\n}\r\n","function hue2rgb(p: number, q: number, t: number) {\r\n  if (t < 0) {\r\n    t += 1;\r\n  }\r\n\r\n  if (t > 1) {\r\n    t -= 1;\r\n  }\r\n\r\n  if (t < 1 / 6) {\r\n    return p + (q - p) * 6 * t;\r\n  }\r\n\r\n  if (t < 1 / 2) {\r\n    return q;\r\n  }\r\n\r\n  if (t < 2 / 3) {\r\n    return p + (q - p) * (2 / 3 - t) * 6;\r\n  }\r\n\r\n  return p;\r\n}\r\n\r\n/**\r\n * Converts an HSL color value to RGB. Conversion formula\r\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n * Assumes h, s, and l are contained in the set [0, 1] and\r\n * returns r, g, and b in the set [0, 255].\r\n *\r\n * @param h - The hue.\r\n * @param s - The saturation.\r\n * @param l - The lightness.\r\n */\r\nexport function hslToRgb(h: number, s: number, l: number) {\r\n  let r: number;\r\n  let g: number;\r\n  let b: number;\r\n\r\n  if (s === 0) {\r\n    r = l; // achromatic\r\n    g = l; // achromatic\r\n    b = l; // achromatic\r\n  } else {\r\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n    const p = 2 * l - q;\r\n    r = hue2rgb(p, q, h + 1 / 3);\r\n    g = hue2rgb(p, q, h);\r\n    b = hue2rgb(p, q, h - 1 / 3);\r\n  }\r\n\r\n  return {\r\n    r: r * 255,\r\n    // tslint:disable-next-line:object-literal-sort-keys\r\n    g: g * 255,\r\n    b: b * 255\r\n  };\r\n}\r\n","function componentToHex(c: number) {\r\n  const hex = c.toString(16);\r\n  return hex.length === 1 ? `0${hex}` : hex;\r\n}\r\n\r\n/**\r\n * Converts RGB(A) values to a hex string.\r\n *\r\n * @param r - Red.\r\n * @param g - Green.\r\n * @param b - Blue.\r\n * @param a - Alpha.\r\n */\r\nexport function rgbaToHex(r: number, g: number, b: number, a?: number) {\r\n  const hex = `#${componentToHex(r) + componentToHex(g) + componentToHex(b)}`;\r\n  return a !== undefined ? hex + componentToHex(a) : hex;\r\n}\r\n","function hue(max: number, r: number, g: number, b: number, d: number) {\r\n  let h = 0;\r\n\r\n  if (r === max) {\r\n    h = (g - b) / d + (g < b ? 6 : 0);\r\n  } else if (r === max) {\r\n    h = (b - r) / d + 2;\r\n  } else if (b === max) {\r\n    h = (r - g) / d + 4;\r\n  }\r\n\r\n  return h / 6;\r\n}\r\n\r\n/**\r\n * Converts an RGB color value to HSL.\r\n * Conversion formula adapted from http://en.wikipedia.org/wiki/HSL_color_space.\r\n *\r\n * Assumes r, g, and b are contained in the set [0, 255] and returns h, s, and l in the set [0, 1].\r\n *\r\n * @param red - The red color value.\r\n * @param green - The green color value.\r\n * @param  blue - The blue color value.\r\n */\r\nexport function rgbToHsl(red: number, green: number, blue: number) {\r\n  const r = red / 255;\r\n  const g = green / 255;\r\n  const b = blue / 255;\r\n\r\n  const max = Math.max(r, g, b);\r\n  const min = Math.min(r, g, b);\r\n\r\n  const l = (max + min) / 2;\r\n\r\n  if (max === min) {\r\n    return { h: 0, s: 0, l };\r\n  }\r\n\r\n  const d = max - min;\r\n  const s = l > 0.5 ? d / (2 - d) : d / (max + min);\r\n  const h = hue(max, r, g, b, d);\r\n\r\n  return { h, s, l };\r\n}\r\n","/**\r\n * Goes through an elements hierarchy to find its position relative to its container.\r\n *\r\n * @param element - Element to get the position of.\r\n * @param container - The container to get the position relative to.\r\n */\r\nexport function getElementPositionInContainer(\r\n  element: HTMLElement,\r\n  container: HTMLElement\r\n) {\r\n  let top = 0;\r\n  let left = 0;\r\n\r\n  do {\r\n    top += element.offsetTop || 0;\r\n    left += element.offsetLeft || 0;\r\n    element = element.parentElement;\r\n  } while (element && element !== container);\r\n\r\n  return { left, top };\r\n}\r\n","import { getElementPositionInContainer } from \"./getElementPositionInContainer\";\r\n\r\n/**\r\n * Goes through an elements hierarchy to find its absolute position on the page.\r\n *\r\n * @param element - Element to get the position of.\r\n */\r\nexport function getElementAbsolutePosition(element: HTMLElement) {\r\n  return getElementPositionInContainer(element, document.body);\r\n}\r\n","/**\r\n * Class representing the data for an interaction event.\r\n * @private\r\n */\r\nexport class InteractionData {\r\n  public element: HTMLElement;\r\n  public startX = 0;\r\n  public startY = 0;\r\n  public currentX = 0;\r\n  public currentY = 0;\r\n  public previousX = 0;\r\n  public previousY = 0;\r\n  public relativeX = 0;\r\n  public relativeY = 0;\r\n  public transitionX = 0;\r\n  public transitionY = 0;\r\n  public compoundX = 0;\r\n  public compoundY = 0;\r\n  public previousCompoundX = 0;\r\n  public previousCompoundY = 0;\r\n  public endX = 0;\r\n  public endY = 0;\r\n  public velocityX = 0;\r\n  public velocityY = 0;\r\n\r\n  public constructor(element: HTMLElement) {\r\n    this.element = element;\r\n  }\r\n\r\n  public start(x: number, y: number) {\r\n    this.startX = x;\r\n    this.startY = y;\r\n    this.previousCompoundX = this.compoundX;\r\n    this.previousCompoundY = this.compoundY;\r\n    this.previousX = this.startX;\r\n    this.previousY = this.startY;\r\n  }\r\n\r\n  public update(x: number, y: number) {\r\n    this.currentX = x;\r\n    this.currentY = y;\r\n    this.setRelative();\r\n    this.setTransition();\r\n    this.setCompound();\r\n    this.setVelocity();\r\n    this.previousX = this.currentX;\r\n    this.previousY = this.currentY;\r\n  }\r\n\r\n  public end(x: number, y: number) {\r\n    this.endX = x;\r\n    this.endY = y;\r\n  }\r\n\r\n  private setRelative() {\r\n    this.relativeX = this.currentX - this.startX;\r\n    this.relativeY = this.currentY - this.startY;\r\n  }\r\n\r\n  private setTransition() {\r\n    this.transitionX = this.relativeX / this.element.offsetWidth;\r\n    this.transitionY = this.relativeY / this.element.offsetHeight;\r\n  }\r\n\r\n  private setCompound() {\r\n    this.compoundX = this.relativeX + this.previousCompoundX;\r\n    this.compoundY = this.relativeY + this.previousCompoundY;\r\n  }\r\n\r\n  private setVelocity() {\r\n    this.velocityX = this.currentX - this.previousX;\r\n    this.velocityY = this.currentY - this.previousY;\r\n  }\r\n}\r\n","import { InteractionData } from \"./InteractionData\";\r\n\r\n/**\r\n * Sets up the required events and listeners for a complete drag interaction.\r\n *\r\n * @param element - The element to attach the events to,\r\n * @param callbacks - Callbacks that are called when a dragging action occurs.\r\n * @param callbacks.onStart - Called when dragging starts.\r\n * @param callbacks.onMove - Called when dragging occurs.\r\n * @param callbacks.onEnd - Called when dragging stops.\r\n */\r\nexport function addDragInteraction(\r\n  element: HTMLElement,\r\n  callbacks: {\r\n    onStart: (event: Event, data: InteractionData) => void;\r\n    onMove: (event: Event, data: InteractionData) => void;\r\n    onEnd: (event: Event, data: InteractionData) => void;\r\n  }\r\n) {\r\n  const data = new InteractionData(element);\r\n\r\n  function start(event: Event, x: number, y: number) {\r\n    data.start(x, y);\r\n    if (typeof callbacks.onStart === \"function\") {\r\n      callbacks.onStart(event, data);\r\n    }\r\n  }\r\n\r\n  function update(event: Event, x: number, y: number) {\r\n    data.update(x, y);\r\n    if (typeof callbacks.onMove === \"function\") {\r\n      callbacks.onMove(event, data);\r\n    }\r\n  }\r\n\r\n  function end(event: Event, x: number, y: number) {\r\n    data.end(x, y);\r\n    if (typeof callbacks.onEnd === \"function\") {\r\n      callbacks.onEnd(event, data);\r\n    }\r\n  }\r\n\r\n  function onMouseMove(e: MouseEvent) {\r\n    update(e, e.pageX, e.pageY);\r\n  }\r\n\r\n  function onMouseUp(e: MouseEvent) {\r\n    document.removeEventListener(\"mousemove\", onMouseMove);\r\n    document.removeEventListener(\"mouseup\", onMouseUp);\r\n    end(e, e.pageX, e.pageY);\r\n  }\r\n\r\n  function onMouseDown(e: MouseEvent) {\r\n    document.addEventListener(\"mousemove\", onMouseMove);\r\n    document.addEventListener(\"mouseup\", onMouseUp);\r\n    start(e, e.pageX, e.pageY);\r\n  }\r\n\r\n  function onTouchMove(e: TouchEvent) {\r\n    update(e, e.touches[0].pageX, e.touches[0].pageY);\r\n  }\r\n\r\n  function onTouchEnd(e: TouchEvent) {\r\n    document.removeEventListener(\"touchmove\", onTouchMove);\r\n    document.removeEventListener(\"touchend\", onTouchEnd);\r\n    end(e, e.touches[0].pageX, e.touches[0].pageY);\r\n  }\r\n\r\n  function onTouchStart(e: TouchEvent) {\r\n    document.addEventListener(\"touchmove\", onTouchMove);\r\n    document.addEventListener(\"touchend\", onTouchEnd);\r\n    start(e, e.touches[0].pageX, e.touches[0].pageY);\r\n  }\r\n\r\n  element.addEventListener(\"mousedown\", onMouseDown);\r\n  element.addEventListener(\"touchstart\", onTouchStart);\r\n}\r\n","/**\r\n * @param max\r\n * @param value\r\n */\r\nexport function clampMax(max: number | null | undefined, value: number) {\r\n  if (max != null && value >= max) {\r\n    return max;\r\n  }\r\n  return value;\r\n}\r\n","/**\r\n * @param min\r\n * @param value\r\n */\r\nexport function clampMin(min: number | null | undefined, value: number) {\r\n  if (min != null && value <= min) {\r\n    return min;\r\n  }\r\n  return value;\r\n}\r\n","import { clampMax } from \"./clampMax\";\r\nimport { clampMin } from \"./clampMin\";\r\n\r\n/**\r\n * Returns a value clamped between a maximum and a minimum number.\r\n *\r\n * @param  value - The value to clamp.\r\n * @param  min - The minimum boundary.\r\n * @param  max - The maximum boundary.\r\n *\r\n * @example\r\n * clamp(5, 0, 10); // Returns 5\r\n * @example\r\n * clamp(-10, 0, 10); // Returns 0\r\n * @example\r\n * clamp(20, 0, 10); // Returns 10\r\n */\r\nexport function clamp(value: number, min: number, max: number) {\r\n  value = clampMax(max, value);\r\n  value = clampMin(min, value);\r\n  return value;\r\n}\r\n","/**\r\n * Computes the amount of decimals of a number.\r\n * Note: Will drop trailing zeroes off a numeric value.\r\n * 1.00 => 0 decimals\r\n * '1.00' => 2 decimals.\r\n *\r\n * @param value - A value as a number or a string.\r\n */\r\nexport function decimalPlaces(value: number | string) {\r\n  const match = `${value}`.match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\r\n\r\n  if (!match) {\r\n    return 0;\r\n  }\r\n\r\n  return Math.max(\r\n    0,\r\n    // Number of digits right of decimal point.\r\n    (match[1] ? match[1].length : 0) -\r\n      // Adjust for scientific notation.\r\n      (match[2] ? +match[2] : 0)\r\n  );\r\n}\r\n","/**\r\n * Converts degrees to radians.\r\n *\r\n * @param degree - A number representing the degrees to convert.\r\n */\r\nexport function degreeToRadian(degree: number) {\r\n  return degree * (Math.PI / 180);\r\n}\r\n","/**\r\n * Checks if value is inside a range.\r\n *\r\n * @param value - Value to check.\r\n * @param min - Range minimum boundary.\r\n * @param max - Range maximum boundary.\r\n * @param threshold - Optional threshold value.\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function inRange(\r\n  value: number,\r\n  min: number,\r\n  max: number,\r\n  threshold: number = 0\r\n) {\r\n  return value + threshold >= min && value - threshold <= max;\r\n}\r\n","/**\r\n * Linear interpolation.\r\n *\r\n * @param start - Start value;\r\n * @param end - End value.\r\n * @param t -  A value in the set [0, 1].\r\n */\r\nexport function lerp(start: number, end: number, t: number) {\r\n  return start + (end - start) * t;\r\n}\r\n","/**\r\n * Maps a value from an input range to an output range.\r\n *\r\n * @param value - The value to map.\r\n * @param inStart - In start value.\r\n * @param inEnd - In end value.\r\n * @param outStart - Out start value.\r\n * @param outEnd - Out end value.\r\n */\r\nexport function mapToRange(\r\n  value: number,\r\n  inStart: number,\r\n  inEnd: number,\r\n  outStart: number,\r\n  outEnd: number\r\n) {\r\n  value = (value - inStart) / (inEnd - inStart) || 0;\r\n\r\n  if (value === Infinity) {\r\n    return 0;\r\n  }\r\n\r\n  return outStart + (outEnd - outStart) * value;\r\n}\r\n","/**\r\n * Converts radians to degrees.\r\n *\r\n * @param radian - A number representing the radians to\r\n */\r\nexport function radianToDegree(radian: number) {\r\n  return radian * 180 / Math.PI;\r\n}\r\n","/**\r\n * Returns a pseudo-random number between a min (inclusive) and a max (exclusive) value.\r\n *\r\n * If min is greater than max the parameters are swapped to support inverted ranges.\r\n *\r\n * @param min - The minimum value of the range.\r\n * @param max - The maximum value of the range.\r\n */\r\nexport function randomRange(\r\n  min: number | null | undefined,\r\n  max: number | null | undefined\r\n) {\r\n  min = min == null ? Number.MIN_VALUE : min;\r\n  max = max == null ? Number.MAX_VALUE : max;\r\n  return (\r\n    Math.min(min, max) +\r\n    Math.random() * (Math.max(min, max) - Math.min(min, max))\r\n  );\r\n}\r\n","import { randomRange } from \"./randomRange\";\r\n\r\n/**\r\n * Gets random integer inside range or snap to min/max values.\r\n *\r\n * @param min - Minimum value.\r\n * @param max - Maximum value.\r\n */\r\nexport function randomInt(min: number, max: number) {\r\n  // can't be max + 0.5 otherwise it will round up if `rand`\r\n  // returns `max` causing it to overflow range.\r\n  // -0.5 and + 0.49 are required to avoid bias caused by rounding\r\n  return Math.round(randomRange(min - 0.5, max + 0.499999999999));\r\n}\r\n","import { randomInt } from \"./randomInt\";\r\n\r\nconst defaultDictionary =\r\n  \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\n\r\n/**\r\n * Returns a random string of the specified length.\r\n *\r\n * @param length - Length.\r\n * @param dictionary - A string containing all the symbols to choose from.\r\n */\r\nexport function randomString(\r\n  length: number,\r\n  dictionary: string = defaultDictionary\r\n) {\r\n  let result = \"\";\r\n\r\n  while (length) {\r\n    result += dictionary[randomInt(0, dictionary.length - 1)];\r\n    length--;\r\n  }\r\n\r\n  return result;\r\n}\r\n","import { decimalPlaces } from \"./decimalPlaces\";\r\n\r\n/**\r\n * Rounds number to a specific radix.\r\n *\r\n * @param value - Value to round.\r\n * @param radix - Radix.\r\n */\r\nexport function round(value: number, radix: number = 1) {\r\n  value = Math.round(value / radix) * radix;\r\n  return Number(value.toFixed(decimalPlaces(radix)));\r\n}\r\n","/**\r\n * Wraps a value within a range.\r\n *\r\n * @param value - The value to wrap.\r\n * @param min - The minimum boundary.\r\n * @param max - The maximum boundary.\r\n */\r\nexport function wrap(value: number, min: number, max: number) {\r\n  const range = max - min;\r\n\r\n  if (min === max) {\r\n    return min;\r\n  } else if (value > max) {\r\n    value = min + (value - min);\r\n  } else {\r\n    value = max - (min - value);\r\n  }\r\n\r\n  return value % range;\r\n}\r\n","const screen = window.screen;\r\n\r\n/**\r\n * Returns the pixel ratio of the current device, as a value from 0 to 1.\r\n */\r\nexport function getDevicePixelRatio() {\r\n  let ratio = 1;\r\n  // To account for zoom, change to use deviceXDPI instead of systemXDPI\r\n  if (\r\n    screen.systemXDPI &&\r\n    screen.logicalXDPI &&\r\n    screen.systemXDPI > screen.logicalXDPI\r\n  ) {\r\n    // Only allow for values > 1\r\n    ratio = screen.systemXDPI / screen.logicalXDPI;\r\n  } else if (window.devicePixelRatio) {\r\n    ratio = window.devicePixelRatio;\r\n  }\r\n  return ratio;\r\n}\r\n","const navigator = window.navigator;\r\n\r\nexport const isMobile = {\r\n  /**\r\n   * @private\r\n   */\r\n  isAndroid() {\r\n    return !!navigator.userAgent.match(/Android/i);\r\n  },\r\n  /**\r\n   * @private\r\n   */\r\n  isBlackBerry() {\r\n    return !!navigator.userAgent.match(/BlackBerry/i);\r\n  },\r\n  /**\r\n   * @private\r\n   */\r\n  isiOS() {\r\n    return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  /**\r\n   * @private\r\n   */\r\n  isOpera() {\r\n    return !!navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  /**\r\n   * @private\r\n   */\r\n  isWindows() {\r\n    return (\r\n      !!navigator.userAgent.match(/IEMobile/i) ||\r\n      !!navigator.userAgent.match(/WPDesktop/i)\r\n    );\r\n  },\r\n  /**\r\n   * @private\r\n   */\r\n  any() {\r\n    return (\r\n      this.isAndroid() ||\r\n      this.isBlackBerry() ||\r\n      this.isiOS() ||\r\n      this.isOpera() ||\r\n      this.isWindows()\r\n    );\r\n  }\r\n};\r\n","import { lerp } from \"../math/lerp\";\r\n\r\nfunction deCasteljau(points: number[], t: number) {\r\n  const calculatedPoints = [];\r\n\r\n  for (let i = 1; i < points.length; i++) {\r\n    const value = lerp(points[i - 1], points[i], t);\r\n    calculatedPoints.push(value);\r\n  }\r\n\r\n  return calculatedPoints;\r\n}\r\n\r\n/**\r\n * Calculates a point on the curve, for a given t value between 0 and 1.\r\n *\r\n * @param points - Array of control points for the curve.\r\n * @param t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\r\n */\r\nexport function bezierValue(points: number[], t: number) {\r\n  if (t === 0 || points.length === 1) {\r\n    return points[0];\r\n  }\r\n\r\n  if (t === 1) {\r\n    return points[points.length - 1];\r\n  }\r\n\r\n  return bezierValue(deCasteljau(points, t), t);\r\n}\r\n\r\n/**\r\n * Calculates the curve tangent at the specified t value.\r\n *\r\n * @param points - Array of control points for the curve.\r\n * @param t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\r\n */\r\nexport function bezierDerivative(points: number[], t: number) {\r\n  if (points.length === 1) {\r\n    return [points[0], points[0]];\r\n  }\r\n\r\n  if (points.length === 2) {\r\n    return [points[0], points[1]];\r\n  }\r\n\r\n  const deCa = deCasteljau(points, t);\r\n\r\n  if (deCa.length === 2) {\r\n    return deCa;\r\n  }\r\n\r\n  return bezierDerivative(deCa, t);\r\n}\r\n","function catmullRom(p1, p2, p3, p4, t) {\r\n  const squared = t * t;\r\n  const cubed = t * t * t;\r\n\r\n  const f1 = -0.5 * cubed + squared - 0.5 * t;\r\n  const f2 = 1.5 * cubed - 2.5 * squared + 1.0;\r\n  const f3 = -1.5 * cubed + 2.0 * squared + 0.5 * t;\r\n  const f4 = 0.5 * cubed - 0.5 * squared;\r\n\r\n  return p1 * f1 + p2 * f2 + p3 * f3 + p4 * f4;\r\n}\r\n\r\n// function catmullRomDerivative(p1, p2, p3, p4, t) {\r\n//   const squared = t * t;\r\n//   return p2 + 2 * p3 * t + 3 * p4 * squared;\r\n// }\r\n\r\n/**\r\n * Calculates a point on the curve, for a given t value between 0 and 1.\r\n *\r\n * @param points - Array of control points for the curve.\r\n * @param t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\r\n * TODO: Write tests to confirm it works as intended.\r\n */\r\nexport function catmullRomValue(points: number[], t: number) {\r\n  if (points.length < 4) {\r\n    return 0;\r\n  }\r\n\r\n  // TODO: Make it work with any number of points.\r\n\r\n  return catmullRom(points[0], points[1], points[2], points[3], t);\r\n}\r\n\r\nconsole.warn(\"Function 'catmullRomValue' is incomplete. Use at own risk.\");\r\n","/**\r\n * Calculates a point on the curve, for a given t value between 0 and 1.\r\n *\r\n * @param points - Array of control points for the curve.\r\n * @param t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\r\n * TODO: Write tests to confirm it works as intended.\r\n */\r\nexport function hermite(points: number[], t: number) {\r\n  const squared = t * t;\r\n  const cubed = t * squared;\r\n  const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\r\n  const part2 = -2.0 * cubed + 3.0 * squared;\r\n  const part3 = cubed - 2.0 * squared + t;\r\n  const part4 = cubed - squared;\r\n\r\n  return (\r\n    points[0] * part1 +\r\n    points[2] * part2 +\r\n    points[1] * part3 +\r\n    points[3] * part4\r\n  );\r\n}\r\n\r\nconsole.warn(\"Function 'hermite' is incomplete. Use at own risk.\");\r\n","/**\r\n * Adds two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function add(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  return {\r\n    x: vector1.x + vector2.x,\r\n    y: vector1.y + vector2.y\r\n  };\r\n}\r\n","/**\r\n * Returns the distance between two vectors.\r\n *\r\n * @param vector1 - Point1 position.\r\n * @param vector2 - Point2 position.\r\n */\r\nexport function distance(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  const x = Math.abs(vector1.x - vector2.x) ** 2;\r\n  const y = Math.abs(vector1.y - vector2.y) ** 2;\r\n  return Math.sqrt(x + y);\r\n}\r\n","/**\r\n * Divides two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function divide(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  return {\r\n    x: vector1.x / vector2.x,\r\n    y: vector1.y / vector2.y\r\n  };\r\n}\r\n","/**\r\n * Returns the dot product of two vectors.\r\n *\r\n * @memberof vector2\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function dot(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  return vector1.x * vector2.x + vector1.y * vector2.y;\r\n}\r\n","import { dot } from \"./dot\";\r\n/**\r\n * Returns length of a vector.\r\n *\r\n * @param vector - Vector.\r\n */\r\nexport function length(vector: { x: number; y: number }) {\r\n  return Math.sqrt(dot(vector, vector));\r\n}\r\n","/**\r\n * Multiplies two vectors and returns the result.\r\n *\r\n * @memberof vector2\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function multiply(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  return {\r\n    x: vector1.x * vector2.x,\r\n    y: vector1.y * vector2.y\r\n  };\r\n}\r\n","/**\r\n * Returns the negated coordinated of a vector.\r\n *\r\n * @param vector - Vector to negate.\r\n */\r\nexport function negate(vector: { x: number; y: number }) {\r\n  return {\r\n    x: -vector.x === -0 ? 0 : -vector.x,\r\n    y: -vector.y === -0 ? 0 : -vector.y\r\n  };\r\n}\r\n","/**\r\n * Checks for intersection between two vectors.\r\n *\r\n * @param vector1 - First vector.\r\n * @param size1 - First size;\r\n * @param vector2 - Second vector.\r\n * @param size2 - Second size.\r\n */\r\nexport function pointIntersection(\r\n  vector1: { x: number; y: number },\r\n  size1: number,\r\n  vector2: { x: number; y: number },\r\n  size2: number\r\n) {\r\n  return (\r\n    (vector2.x - vector1.x) ** 2 + (vector1.y - vector2.y) ** 2 <=\r\n    (size1 + size2) ** 2\r\n  );\r\n}\r\n","const PRECISION = 100000000;\r\nconst roundToPrecision = (value: number) =>\r\n  Math.round(value * PRECISION) / PRECISION;\r\n\r\n/**\r\n * Returns a vector positioned around another vector.\r\n *\r\n * @param vector - Center point position.\r\n * @param distance - Distance from the center point.\r\n * @param radian - Radian value.\r\n */\r\nexport function positionAroundVector2(\r\n  vector: { x: number; y: number },\r\n  distance: number,\r\n  radian: number\r\n) {\r\n  const xAxis = roundToPrecision(Math.cos(radian));\r\n  const yAxis = roundToPrecision(Math.sin(radian));\r\n\r\n  return {\r\n    x: vector.x + distance * xAxis,\r\n    y: vector.y + distance * yAxis\r\n  };\r\n}\r\n","/**\r\n * Scales a vector by a value.\r\n *\r\n * @param vector - Vector to scale.\r\n * @param value - Value to scale by.\r\n */\r\nexport function scale(vector: { x: number; y: number }, value: number) {\r\n  return {\r\n    x: vector.x * value,\r\n    y: vector.y * value\r\n  };\r\n}\r\n","/**\r\n * Subtracts two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function subtract(\r\n  vector1: { x: number; y: number },\r\n  vector2: { x: number; y: number }\r\n) {\r\n  return {\r\n    x: vector1.x - vector2.x,\r\n    y: vector1.y - vector2.y\r\n  };\r\n}\r\n","/**\r\n * Loops through the dimensions of a vector.\r\n * Starts at zero, so keep in mind that the number of callbacks will be the dimension sizes +1;\r\n *\r\n * @param vector - Vector to traverse.\r\n * @param callback - Callback for each step.\r\n * @param step - Step size (default: 1).\r\n */\r\nexport function traverse(\r\n  vector: { x: number; y: number },\r\n  callback: (vector: { x: number; y: number }) => void,\r\n  step: number = 1\r\n) {\r\n  for (let x = 0; x <= vector.x; x += step) {\r\n    for (let y = 0; y <= vector.y; y += step) {\r\n      callback({ x, y });\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Adds two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function add(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  return {\r\n    x: vector1.x + vector2.x,\r\n    y: vector1.y + vector2.y,\r\n    z: vector1.z + vector2.z\r\n  };\r\n}\r\n","/**\r\n * Returns the distance between two vectors.\r\n *\r\n * @param vector1 - Point1 position.\r\n * @param vector2 - Point2 position.\r\n */\r\nexport function distance(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  const x = Math.abs(vector1.x - vector2.x) ** 2;\r\n  const y = Math.abs(vector1.y - vector2.y) ** 2;\r\n  const z = Math.abs(vector1.z - vector2.z) ** 2;\r\n  return Math.sqrt(x + y + z);\r\n}\r\n","/**\r\n * Divides two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function divide(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  return {\r\n    x: vector1.x / vector2.x,\r\n    y: vector1.y / vector2.y,\r\n    z: vector1.z / vector2.z\r\n  };\r\n}\r\n","/**\r\n * Returns the dot product of two vectors.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function dot(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  return vector1.x * vector2.x + vector1.y * vector2.y + vector1.z * vector2.z;\r\n}\r\n","import { dot } from \"./dot\";\r\n/**\r\n * Returns length of a vector.\r\n *\r\n * @param vector - Vector.\r\n */\r\nexport function length(vector: { x: number; y: number; z: number }) {\r\n  return Math.sqrt(dot(vector, vector));\r\n}\r\n","/**\r\n * Multiplies two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function multiply(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  return {\r\n    x: vector1.x * vector2.x,\r\n    y: vector1.y * vector2.y,\r\n    z: vector1.z * vector2.z\r\n  };\r\n}\r\n","/**\r\n * Returns the negated coordinates of a vector.\r\n *\r\n * @param vector - Vector to negate.\r\n */\r\nexport function negate(vector: { x: number; y: number; z: number }) {\r\n  return {\r\n    x: -vector.x === -0 ? 0 : -vector.x,\r\n    y: -vector.y === -0 ? 0 : -vector.y,\r\n    z: -vector.z === -0 ? 0 : -vector.z\r\n  };\r\n}\r\n","/**\r\n * Checks for intersection between two vectors.\r\n *\r\n * @param vector1 - First vector.\r\n * @param size1 - First size.\r\n * @param vector2 - Second vector.\r\n * @param size2 - Second size.\r\n */\r\nexport function pointIntersection(\r\n  vector1: { x: number; y: number; z: number },\r\n  size1: number,\r\n  vector2: { x: number; y: number; z: number },\r\n  size2: number\r\n) {\r\n  return (\r\n    (vector1.x - vector2.x) ** 2 +\r\n      (vector1.y - vector2.y) ** 2 +\r\n      (vector1.z - vector2.z) ** 2 <=\r\n    (size1 + size2) ** 2\r\n  );\r\n}\r\n","const PRECISION = 100000000;\r\nconst roundToPrecision = (value: number) =>\r\n  Math.round(value * PRECISION) / PRECISION;\r\n\r\n/**\r\n * Returns a vector positioned around another vector.\r\n *\r\n * @param vector - Center point position.\r\n * @param distance - Distance from the center point.\r\n * @param vertical - Vertical radian value.\r\n * @param horizontal - Horizontal radian value.\r\n */\r\nexport function positionAroundVector3(\r\n  vector: { x: number; y: number; z: number },\r\n  distance: number,\r\n  vertical: number,\r\n  horizontal: number\r\n) {\r\n  const xAxis = roundToPrecision(Math.cos(vertical) * Math.cos(horizontal));\r\n  const yAxis = roundToPrecision(Math.sin(vertical));\r\n  const zAxis = roundToPrecision(Math.cos(vertical) * Math.sin(horizontal));\r\n\r\n  return {\r\n    x: vector.x + distance * xAxis,\r\n    y: vector.y + distance * yAxis,\r\n    z: vector.z + distance * zAxis\r\n  };\r\n}\r\n","/**\r\n * Scales a vector by a value.\r\n *\r\n * @param vector - Vector to scale.\r\n * @param value - Value to scale by.\r\n */\r\nexport function scale(\r\n  vector: { x: number; y: number; z: number },\r\n  value: number\r\n) {\r\n  return {\r\n    x: vector.x * value,\r\n    y: vector.y * value,\r\n    z: vector.z * value\r\n  };\r\n}\r\n","/**\r\n * Subtracts two vectors and returns the result.\r\n *\r\n * @param vector1 - First vector.\r\n * @param vector2 - Second vector.\r\n */\r\nexport function subtract(\r\n  vector1: { x: number; y: number; z: number },\r\n  vector2: { x: number; y: number; z: number }\r\n) {\r\n  return {\r\n    x: vector1.x - vector2.x,\r\n    y: vector1.y - vector2.y,\r\n    z: vector1.z - vector2.z\r\n  };\r\n}\r\n","/**\r\n * Loops through the dimensions of a vector.\r\n * Starts at zero, so keep in mind that the number of callbacks will be the dimension sizes +1;\r\n *\r\n * @param vector - Vector to traverse.\r\n * @param callback - Callback for each step.\r\n * @param step - Step size (default: 1).\r\n */\r\nexport function traverse(\r\n  vector: { x: number; y: number; z: number },\r\n  callback: (vector: { x: number; y: number; z: number }) => void,\r\n  step: number = 1\r\n) {\r\n  for (let x = 0; x <= vector.x; x += step) {\r\n    for (let y = 0; y <= vector.y; y += step) {\r\n      for (let z = 0; z <= vector.z; z += step) {\r\n        callback({ x, y, z });\r\n      }\r\n    }\r\n  }\r\n}\r\n"],"names":["dot","PRECISION","roundToPrecision"],"mappings":"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"}