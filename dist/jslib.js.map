{"version":3,"file":"jslib.js","sources":["../src/animation/easing/linear.ts","../src/animation/easing/easeInSine.ts","../src/animation/easing/easeOutSine.ts","../src/animation/easing/easeInOutSine.ts","../src/animation/easing/easeInQuad.ts","../src/animation/easing/easeOutQuad.ts","../src/animation/easing/easeInOutQuad.ts","../src/animation/easing/easeInCubic.ts","../src/animation/easing/easeOutCubic.ts","../src/animation/easing/easeInOutCubic.ts","../src/animation/easing/easeInQuart.ts","../src/animation/easing/easeOutQuart.ts","../src/animation/easing/easeInOutQuart.ts","../src/animation/easing/easeInQuint.ts","../src/animation/easing/easeOutQuint.ts","../src/animation/easing/easeInOutQuint.ts","../src/animation/easing/easeInExpo.ts","../src/animation/easing/easeOutExpo.ts","../src/animation/easing/easeInOutExpo.ts","../src/animation/easing/easeInCirc.ts","../src/animation/easing/easeOutCirc.ts","../src/animation/easing/easeInOutCirc.ts","../src/animation/easing.ts","../src/animation/transition.ts","../src/array/getClosestNumber.ts","../src/array/intersperse.ts","../src/array/nodeListToArray.ts","../src/array.ts","../src/color/hexToRgba.ts","../src/color/hslToRgb.ts","../src/color/rgbaToHex.ts","../src/color/rgbToHsl.ts","../src/color.ts","../src/dom/getElementPositionInContainer.ts","../src/dom/getElementAbsolutePosition.ts","../src/dom.ts","../src/interactivity/InteractionData.ts","../src/interactivity/addDragInteraction.ts","../src/interactivity.ts","../src/math/clampMax.ts","../src/math/clampMin.ts","../src/math/clamp.ts","../src/math/decimalPlaces.ts","../src/math/degreeToRadian.ts","../src/math/inRange.ts","../src/math/lerp.ts","../src/math/mapToRange.ts","../src/math/radianToDegree.ts","../src/math/randomRange.ts","../src/math/randomInt.ts","../src/math/randomString.ts","../src/math/round.ts","../src/math/wrap.ts","../src/math.ts","../src/misc/getDevicePixelRatio.ts","../src/misc/IsMobile.ts","../src/misc.ts","../src/splines/bezier.ts","../src/splines/catmullRom.ts","../src/splines/hermite.ts","../src/splines.ts","../src/vector2/add.ts","../src/vector2/distance.ts","../src/vector2/divide.ts","../src/vector2/dot.ts","../src/vector2/length.ts","../src/vector2/multiply.ts","../src/vector2/negate.ts","../src/vector2/pointIntersection.ts","../src/vector2/positionAroundVector2.ts","../src/vector2/scale.ts","../src/vector2/subtract.ts","../src/vector2/traverse.ts","../src/vector2.ts","../src/vector3/add.ts","../src/vector3/distance.ts","../src/vector3/divide.ts","../src/vector3/dot.ts","../src/vector3/length.ts","../src/vector3/multiply.ts","../src/vector3/negate.ts","../src/vector3/pointIntersection.ts","../src/vector3/positionAroundVector3.ts","../src/vector3/scale.ts","../src/vector3/subtract.ts","../src/vector3/traverse.ts","../src/vector3.ts","../src/index.ts"],"sourcesContent":["/**\n * No easing, no acceleration.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function linear(t) {\n  return t;\n}\n","/**\n * Slight acceleration from zero to full speed.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInSine(t) {\n  return -1 * Math.cos(t * (Math.PI / 2)) + 1;\n}\n","/**\n * Slight deceleration at the end.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutSine(t) {\n  return Math.sin(t * (Math.PI / 2));\n}\n","/**\n * Slight acceleration at beginning and slight deceleration at end.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutSine(t) {\n  return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\n","/**\n * Accelerates from zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInQuad(t) {\n  return t * t;\n}\n","/**\n * Decelerates to zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutQuad(t) {\n  return t * (2 - t);\n}\n","/**\n * Accelerates until halfway, then decelerates.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutQuad(t) {\n  return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n}\n","/**\n * Accelerates from zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInCubic(t) {\n  return t * t * t;\n}\n","/**\n * Decelerates to zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutCubic(t) {\n  const t1 = t - 1;\n  return t1 * t1 * t1 + 1;\n}\n","/**\n * Accelerates until halfway, then decelerates.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutCubic(t) {\n  return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n}\n","/**\n * Accelerates from zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n * \n * @returns {number}\n */\nexport function easeInQuart(t) {\n  return t * t * t * t;\n}\n","/**\n * Decelerates to zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutQuart(t) {\n  const t1 = t - 1;\n  return 1 - t1 * t1 * t1 * t1;\n}\n","/**\n * Accelerates until halfway, then decelerates.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutQuart(t) {\n  const t1 = t - 1;\n  return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * t1 * t1 * t1 * t1;\n}\n","/**\n * Accelerates from zero velocity..\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInQuint(t) {\n  return t * t * t * t * t;\n}\n","/**\n * Decelerates to zero velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutQuint(t) {\n  const t1 = t - 1;\n  return 1 + t1 * t1 * t1 * t1 * t1;\n}\n","/**\n * Accelerates until halfway, then decelerates.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutQuint(t) {\n  const t1 = t - 1;\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * t1 * t1 * t1 * t1 * t1;\n}\n","/**\n * Accelerates exponentially until finish.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInExpo(t) {\n  return t === 0 ? 0 : 2 ** (10 * (t - 1));\n}\n","/**\n * Initial exponential acceleration slowing to stop.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutExpo(t) {\n  return t === 1 ? 1 : -(2 ** (-10 * t)) + 1;\n}\n","/**\n * Exponential acceleration and deceleration.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutExpo(t) {\n  if (t === 0 || t === 1) {\n    return t;\n  }\n\n  const a = t * 2;\n  const b = a - 1;\n\n  if (a < 1) {\n    return 0.5 * 2 ** (10 * b);\n  }\n\n  return 0.5 * (-(2 ** (-10 * b)) + 2);\n}\n","/**\n * Increases velocity until stop.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInCirc(t) {\n  return -1 * (Math.sqrt(1 - t * t) - 1);\n}\n","/**\n * Start fast, then decreases velocity until stop.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeOutCirc(t) {\n  const t1 = t - 1;\n  return Math.sqrt(1 - t1 * t1);\n}\n","/**\n * Fast increase in velocity, fast decrease in velocity.\n *\n * @memberof animation.easing\n *\n * @param {number} t - [0-1]\n *\n * @returns {number}\n */\nexport function easeInOutCirc(t) {\n  const a = t * 2;\n  const b = a - 2;\n\n  if (a < 1) {\n    return -0.5 * (Math.sqrt(1 - a * a) - 1);\n  }\n\n  return 0.5 * (Math.sqrt(1 - b * b) + 1);\n}\n","/**\n * @module\n * @memberof animation\n */\nexport * from \"./easing/linear\";\nexport * from \"./easing/easeInSine\";\nexport * from \"./easing/easeOutSine\";\nexport * from \"./easing/easeInOutSine\";\nexport * from \"./easing/easeInQuad\";\nexport * from \"./easing/easeOutQuad\";\nexport * from \"./easing/easeInOutQuad\";\nexport * from \"./easing/easeInCubic\";\nexport * from \"./easing/easeOutCubic\";\nexport * from \"./easing/easeInOutCubic\";\nexport * from \"./easing/easeInQuart\";\nexport * from \"./easing/easeOutQuart\";\nexport * from \"./easing/easeInOutQuart\";\nexport * from \"./easing/easeInQuint\";\nexport * from \"./easing/easeOutQuint\";\nexport * from \"./easing/easeInOutQuint\";\nexport * from \"./easing/easeInExpo\";\nexport * from \"./easing/easeOutExpo\";\nexport * from \"./easing/easeInOutExpo\";\nexport * from \"./easing/easeInCirc\";\nexport * from \"./easing/easeOutCirc\";\nexport * from \"./easing/easeInOutCirc\";\n","import { linear } from \"../animation/easing\";\n\n/**\n * Changes a value over time, running a callback with the current value at every frame.\n *\n * @memberof animation\n *\n * @param {number} startValue - Start value.\n * @param {number} endValue - End value.\n * @param {number} duration - Time of the transition. (ms)\n * @param {function(value: number): void} callback - Executes every step of the transition.\n * @param {function(t: number): number} easing - Easing method.\n */\nexport function transition(\n  startValue,\n  endValue,\n  duration,\n  callback,\n  easing = linear\n) {\n  let animationFrame;\n  let startTime;\n  let value = startValue;\n\n  function done() {\n    window.cancelAnimationFrame(animationFrame);\n    value = endValue;\n  }\n\n  function increment(progress) {\n    const diff = endValue - startValue;\n    value = easing(progress / duration * diff + startValue);\n    if (value >= endValue) {\n      done();\n    }\n  }\n\n  function decrement(progress) {\n    const diff = startValue - endValue;\n    value = easing(progress / duration * -diff + startValue);\n    if (value <= endValue) {\n      done();\n    }\n  }\n\n  function step(timestamp) {\n    animationFrame = window.requestAnimationFrame(step);\n\n    if (!startTime) {\n      startTime = timestamp;\n    }\n\n    const progress = timestamp - startTime;\n    (startValue < endValue ? increment : decrement)(progress);\n\n    if (typeof callback === \"function\") {\n      callback(value);\n    }\n  }\n\n  if (startValue !== endValue) {\n    animationFrame = window.requestAnimationFrame(step);\n  } else {\n    callback(value);\n  }\n}\n","/**\n * Returns the closest number out of an array.\n *\n * @memberof array\n *\n * @param {Array} array - The array to search in.\n * @param {number} number - The number to search for the closest to.\n *\n * @returns {number}\n *\n * @example\n * // Returns 10\n * getClosestNumber([0, 10, 20], 12);\n */\nexport function getClosestNumber(array, number) {\n  return array.reduce(\n    (previous, current) =>\n      Math.abs(current - number) < Math.abs(previous - number)\n        ? current\n        : previous\n  );\n}\n","/**\n * Return an array with the separator interspersed between\n * each element of the input array.\n *\n * @memberof array\n *\n * @param {Array<*>} array - Array to intersperse.\n * @param {*} separator - Value to insert.\n *\n * @returns {Array}\n *\n * @example\n * intersperse([\"a\", \"b\", \"c\"], \"x\"); // => [\"a\", \"x\", \"b\", \"x\", \"c\"]\n */\nexport function intersperse(array, separator) {\n  if (array.length === 0) {\n    return [];\n  }\n\n  return array\n    .slice(1)\n    .reduce((acc, val) => acc.concat([separator, val]), [array[0]]);\n}\n","/**\n * Converts a NodeList to an Array.\n *\n * @memberof array\n *\n * @param {NodeList} nodeList - A NodeList.\n *\n * @returns {Array}\n *\n * @example\n * // => [div, div, …]\n * toArray(document.querySelectorAll('div'));\n */\nexport function nodeListToArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n","/**\n * Array utilities module.\n * @module\n */\nexport * from \"./array/getClosestNumber\";\nexport * from \"./array/intersperse\";\nexport * from \"./array/nodeListToArray\";\n","/**\n * Converts a hex string to a color.\n * If it can't be converted null is returned.\n *\n * @memberof color\n *\n * @param {string} hex - A hexadecimal color string. (i.e. #CCCCCCFF or CCCCCC)\n *\n * @returns {object}\n */\nexport function hexToRgba(hex) {\n  hex = hex.replace(\"#\", \"\");\n  const r = parseInt(hex.substring(0, 2), 16);\n  const g = parseInt(hex.substring(2, 4), 16);\n  const b = parseInt(hex.substring(4, 6), 16);\n\n  if (hex.length === 6) {\n    return { r, g, b };\n  } else if (hex.length === 8) {\n    return {\n      r,\n      g,\n      b,\n      a: parseInt(hex.substring(6, 8), 16)\n    };\n  }\n  return null;\n}\n","function hue2rgb(p, q, t) {\n  if (t < 0) {\n    t += 1;\n  }\n\n  if (t > 1) {\n    t -= 1;\n  }\n\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n\n  if (t < 1 / 2) {\n    return q;\n  }\n\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n\n  return p;\n}\n\n/**\n * Converts an HSL color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n * Assumes h, s, and l are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @memberof color\n *\n * @param {number} h - The hue.\n * @param {number} s - The saturation.\n * @param {number} l - The lightness.\n *\n * @returns {{ r: number, g: number, b: number }} - The RGB representation.\n */\nexport function hslToRgb(h, s, l) {\n  let r;\n  let g;\n  let b;\n\n  if (s === 0) {\n    r = l; // achromatic\n    g = l; // achromatic\n    b = l; // achromatic\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n\n  return {\n    r: r * 255,\n    g: g * 255,\n    b: b * 255\n  };\n}\n","function componentToHex(c) {\n  const hex = c.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Converts RGB(A) values to a hex string.\n *\n * @memberof color\n *\n * @param {number} r - Red.\n * @param {number} g - Green.\n * @param {number} b - Blue.\n * @param {number?} a - Alpha.\n *\n * @returns {string}\n */\nexport function rgbaToHex(r, g, b, a) {\n  const hex = `#${componentToHex(r) + componentToHex(g) + componentToHex(b)}`;\n  return a !== undefined ? hex + componentToHex(a) : hex;\n}\n","function hue(max, r, g, b, d) {\n  let h = 0;\n\n  if (r === max) {\n    h = (g - b) / d + (g < b ? 6 : 0);\n  } else if (r === max) {\n    h = (b - r) / d + 2;\n  } else if (b === max) {\n    h = (r - g) / d + 4;\n  }\n\n  return h / 6;\n}\n\n/**\n * Converts an RGB color value to HSL.\n * Conversion formula adapted from http://en.wikipedia.org/wiki/HSL_color_space.\n *\n * Assumes r, g, and b are contained in the set [0, 255] and returns h, s, and l in the set [0, 1].\n *\n * @memberof color\n *\n * @param {number} red - The red color value.\n * @param {number} green - The green color value.\n * @param {number} blue - The blue color value.\n *\n * @returns {{ h: number, s: number, l: number }} - The HSL representation.\n */\nexport function rgbToHsl(red, green, blue) {\n  const r = red / 255;\n  const g = green / 255;\n  const b = blue / 255;\n\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    return { h: 0, s: 0, l };\n  }\n\n  const d = max - min;\n  const s = l > 0.5 ? d / (2 - d) : d / (max + min);\n  const h = hue(max, r, g, b, d);\n\n  return { h, s, l };\n}\n","/**\n * Color utilities module.\n * @module\n */\nexport * from \"./color/hexToRgba\";\nexport * from \"./color/hslToRgb\";\nexport * from \"./color/rgbaToHex\";\nexport * from \"./color/rgbToHsl\";\n","/**\n * Goes through an elements hierarchy to find its position relative to its container.\n *\n * @memberof dom\n *\n * @param {HTMLElement} element - Element to get the position of.\n * @param {HTMLElement} container - The container to get the position relative to.\n *\n * @returns {{left: number, top: number}}\n */\nexport function getElementPositionInContainer(element, container) {\n  let top = 0;\n  let left = 0;\n\n  do {\n    top += element.offsetTop || 0;\n    left += element.offsetLeft || 0;\n    element = element.offsetParent;\n  } while (element && element !== container);\n\n  return { left, top };\n}\n","import { getElementPositionInContainer } from \"./getElementPositionInContainer\";\n\n/**\n * Goes through an elements hierarchy to find its absolute position on the page.\n *\n * @memberof dom\n *\n * @param {HTMLElement} element - Element to get the position of.\n *\n * @returns {{left: number, top: number}}\n */\nexport function getElementAbsolutePosition(element) {\n  return getElementPositionInContainer(element, document.body);\n}\n","/**\n * DOM utilities module.\n * @module\n */\nexport * from \"./dom/getElementAbsolutePosition\";\nexport * from \"./dom/getElementPositionInContainer\";\n","/**\n * Class representing the data for an interaction event.\n * @private\n */\nexport class InteractionData {\n  public element: HTMLElement;\n  public startX = 0;\n  public startY = 0;\n  public currentX = 0;\n  public currentY = 0;\n  public previousX = 0;\n  public previousY = 0;\n  public relativeX = 0;\n  public relativeY = 0;\n  public transitionX = 0;\n  public transitionY = 0;\n  public compoundX = 0;\n  public compoundY = 0;\n  public previousCompoundX = 0;\n  public previousCompoundY = 0;\n  public endX = 0;\n  public endY = 0;\n  public velocityX = 0;\n  public velocityY = 0;\n\n  public constructor(element: HTMLElement) {\n    this.element = element;\n  }\n\n  public start(x: number, y: number) {\n    this.startX = x;\n    this.startY = y;\n    this.previousCompoundX = this.compoundX;\n    this.previousCompoundY = this.compoundY;\n    this.previousX = this.startX;\n    this.previousY = this.startY;\n  }\n\n  public update(x: number, y: number) {\n    this.currentX = x;\n    this.currentY = y;\n    this.setRelative();\n    this.setTransition();\n    this.setCompound();\n    this.setVelocity();\n    this.previousX = this.currentX;\n    this.previousY = this.currentY;\n  }\n\n  public end(x: number, y: number) {\n    this.endX = x;\n    this.endY = y;\n  }\n\n  private setRelative() {\n    this.relativeX = this.currentX - this.startX;\n    this.relativeY = this.currentY - this.startY;\n  }\n\n  private setTransition() {\n    this.transitionX = this.relativeX / this.element.offsetWidth;\n    this.transitionY = this.relativeY / this.element.offsetHeight;\n  }\n\n  private setCompound() {\n    this.compoundX = this.relativeX + this.previousCompoundX;\n    this.compoundY = this.relativeY + this.previousCompoundY;\n  }\n\n  private setVelocity() {\n    this.velocityX = this.currentX - this.previousX;\n    this.velocityY = this.currentY - this.previousY;\n  }\n}\n","import { InteractionData } from \"./InteractionData\";\n\n/**\n * Sets up the required events and listeners for a complete drag interaction.\n *\n * @memberof interactivity\n *\n * @param {HTMLElement} element - The element to attach the events to,\n * @param {object} callbacks - Callbacks that are called when a dragging action occurs.\n * @param {function(event: Event, data: InteractionData)} callbacks.onStart - Called when dragging starts.\n * @param {function(event: Event, data: InteractionData)} callbacks.onMove - Called when dragging occurs.\n * @param {function(event: Event, data: InteractionData)} callbacks.onEnd - Called when dragging stops.\n */\nexport function addDragInteraction(element, callbacks) {\n  const data = new InteractionData(element);\n\n  function start(event, x, y) {\n    data.start(x, y);\n    if (typeof callbacks.onStart === \"function\") {\n      callbacks.onStart(event, data);\n    }\n  }\n\n  function update(event, x, y) {\n    data.update(x, y);\n    if (typeof callbacks.onMove === \"function\") {\n      callbacks.onMove(event, data);\n    }\n  }\n\n  function end(event, x, y) {\n    data.end(x, y);\n    if (typeof callbacks.onEnd === \"function\") {\n      callbacks.onEnd(event, data);\n    }\n  }\n\n  const onMouseMove = e => update(e, e.pageX, e.pageY);\n\n  const onMouseUp = e => {\n    document.removeEventListener(\"mousemove\", onMouseMove);\n    document.removeEventListener(\"mouseup\", onMouseUp);\n    end(e, e.pageX, e.pageY);\n  };\n\n  const onMouseDown = e => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", onMouseUp);\n    start(e, e.pageX, e.pageY);\n  };\n\n  const onTouchMove = e => update(e, e.touches[0].pageX, e.touches[0].pageY);\n\n  const onTouchEnd = e => {\n    document.removeEventListener(\"touchmove\", onTouchMove);\n    document.removeEventListener(\"touchend\", onTouchEnd);\n    end(e, e.touches[0].pageX, e.touches[0].pageY);\n  };\n\n  const onTouchStart = e => {\n    document.addEventListener(\"touchmove\", onTouchMove);\n    document.addEventListener(\"touchend\", onTouchEnd);\n    start(e, e.touches[0].pageX, e.touches[0].pageY);\n  };\n\n  element.addEventListener(\"mousedown\", onMouseDown);\n  element.addEventListener(\"touchstart\", onTouchStart);\n}\n","/**\n * Interactivity utilities module.\n * @module\n */\nexport * from \"./interactivity/addDragInteraction\";\n","/**\n * @memberof math\n * \n * @param {number?} max\n * @param {number} value\n *\n * @returns {number}\n */\nexport function clampMax(max, value) {\n  if (max != null && value >= max) {\n    return max;\n  }\n  return value;\n}\n","/**\n * @memberof math\n *\n * @param {number?} min\n * @param {number} value\n *\n * @returns {number}\n */\nexport function clampMin(min, value) {\n  if (min != null && value <= min) {\n    return min;\n  }\n  return value;\n}\n","import { clampMax } from \"./clampMax\";\nimport { clampMin } from \"./clampMin\";\n\n/**\n * Returns a value clamped between a maximum and a minimum number.\n *\n * @memberof math\n *\n * @param {number} value - The value to clamp.\n * @param {number} min - The minimum boundary.\n * @param {number} max - The maximum boundary.\n *\n * @returns {number}\n *\n * @example\n * clamp(5, 0, 10); // Returns 5\n * @example\n * clamp(-10, 0, 10); // Returns 0\n * @example\n * clamp(20, 0, 10); // Returns 10\n */\nexport function clamp(value, min, max) {\n  value = clampMax(max, value);\n  value = clampMin(min, value);\n  return value;\n}\n","/**\n * Computes the amount of decimals of a number.\n * Note: Will drop trailing zeroes off a numeric value.\n * 1.00 => 0 decimals\n * '1.00' => 2 decimals.\n *\n * @memberof math\n *\n * @param {number | string} value - A value as a number or a string.\n *\n * @returns {number}\n */\nexport function decimalPlaces(value) {\n  const match = `${value}`.match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n\n  if (!match) {\n    return 0;\n  }\n\n  return Math.max(\n    0,\n    // Number of digits right of decimal point.\n    (match[1] ? match[1].length : 0) -\n      // Adjust for scientific notation.\n      (match[2] ? +match[2] : 0)\n  );\n}\n","/**\n * Converts degrees to radians.\n *\n * @memberof math\n *\n * @param {number} degree - A number representing the degrees to convert.\n *\n * @returns {number}\n */\nexport function degreeToRadian(degree) {\n  return degree * (Math.PI / 180);\n}\n","/**\n * Checks if value is inside a range.\n *\n * @memberof math\n *\n * @param {number} value - Value to check.\n * @param {number} min - Range minimum boundary.\n * @param {number} max - Range maximum boundary.\n * @param {number?} threshold - Optional threshold value.\n *\n * @returns {boolean}\n */\nexport function inRange(value, min, max, threshold = 0) {\n  return value + threshold >= min && value - threshold <= max;\n}\n","/**\n * Linear interpolation.\n *\n * @memberof math\n *\n * @param {number} start - Start value;\n * @param {number} end - End value.\n * @param {number} t -  A value in the set [0, 1].\n *\n * @returns {number}\n */\nexport function lerp(start, end, t) {\n  return start + (end - start) * t;\n}\n","/**\n * Maps a value from an input range to an output range.\n *\n * @memberof math\n *\n * @param {number} value - The value to map.\n * @param {number} inStart - In start value.\n * @param {number} inEnd - In end value.\n * @param {number} outStart - Out start value.\n * @param {number} outEnd - Out end value.\n *\n * @returns {number}\n */\nexport function mapToRange(value, inStart, inEnd, outStart, outEnd) {\n  value = (value - inStart) / (inEnd - inStart) || 0;\n\n  if (value === Infinity) {\n    return 0;\n  }\n\n  return outStart + (outEnd - outStart) * value;\n}\n","/**\n * Converts radians to degrees.\n *\n * @memberof math\n *\n * @param {number} radian - A number representing the radians to\n *\n * @returns {number}\n */\nexport function radianToDegree(radian) {\n  return radian * 180 / Math.PI;\n}\n","/**\n * Returns a pseudo-random number between a min (inclusive) and a max (exclusive) value.\n *\n * If min is greater than max the parameters are swapped to support inverted ranges.\n *\n * @memberof math\n *\n * @param {number?} min - The minimum value of the range.\n * @param {number?} max - The maximum value of the range.\n *\n * @returns {number}\n */\nexport function randomRange(min, max) {\n  min = min == null ? Number.MIN_VALUE : min;\n  max = max == null ? Number.MAX_VALUE : max;\n  return (\n    Math.min(min, max) +\n    Math.random() * (Math.max(min, max) - Math.min(min, max))\n  );\n}\n","import { randomRange } from \"./randomRange\";\n\n/**\n * Gets random integer inside range or snap to min/max values.\n *\n * @memberof math\n *\n * @param {number} min - Minimum value.\n * @param {number} max - Maximum value.\n *\n * @returns {number}\n */\nexport function randomInt(min, max) {\n  // can't be max + 0.5 otherwise it will round up if `rand`\n  // returns `max` causing it to overflow range.\n  // -0.5 and + 0.49 are required to avoid bias caused by rounding\n  return Math.round(randomRange(min - 0.5, max + 0.499999999999));\n}\n","import { randomInt } from \"./randomInt\";\n\nconst defaultDictionary =\n  \"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n/**\n * Returns a random string of the specified length.\n *\n * @memberof math\n *\n * @param {number} length - Length.\n * @param {string?} dictionary - A string containing all the symbols to choose from.\n *\n * @returns {string}\n */\nexport function randomString(length, dictionary = defaultDictionary) {\n  let result = \"\";\n\n  while (length) {\n    result += dictionary[randomInt(0, dictionary.length - 1)];\n    length--;\n  }\n\n  return result;\n}\n","import { decimalPlaces } from \"./decimalPlaces\";\n\n/**\n * Rounds number to a specific radix.\n *\n * @memberof math\n *\n * @param {number} value - Value to round.\n * @param {number} radix - Radix.\n *\n * @returns {number}\n */\nexport function round(value, radix = 1) {\n  value = Math.round(value / radix) * radix;\n  return Number(value.toFixed(decimalPlaces(radix)));\n}\n","/**\n * Wraps a value within a range.\n *\n * @memberof math\n *\n * @param {number} value - The value to wrap.\n * @param {number} min - The minimum boundary.\n * @param {number} max - The maximum boundary.\n *\n * @returns {number}\n */\nexport function wrap(value, min, max) {\n  const range = max - min;\n\n  if (min === max) {\n    return min;\n  } else if (value > max) {\n    value = min + (value - min);\n  } else {\n    value = max - (min - value);\n  }\n\n  return value % range;\n}\n","/**\n * Math utilities module.\n * @module\n */\nexport * from \"./math/clamp\";\nexport * from \"./math/decimalPlaces\";\nexport * from \"./math/degreeToRadian\";\nexport * from \"./math/inRange\";\nexport * from \"./math/lerp\";\nexport * from \"./math/mapToRange\";\nexport * from \"./math/radianToDegree\";\nexport * from \"./math/randomInt\";\nexport * from \"./math/randomRange\";\nexport * from \"./math/randomString\";\nexport * from \"./math/round\";\nexport * from \"./math/wrap\";\n","const screen = window.screen;\n\n/**\n * Returns the pixel ratio of the current device, as a value from 0 to 1.\n *\n * @memberof misc\n *\n * @returns {number}\n */\nexport function getDevicePixelRatio() {\n  let ratio = 1;\n  // To account for zoom, change to use deviceXDPI instead of systemXDPI\n  if (\n    screen.systemXDPI &&\n    screen.logicalXDPI &&\n    screen.systemXDPI > screen.logicalXDPI\n  ) {\n    // Only allow for values > 1\n    ratio = screen.systemXDPI / screen.logicalXDPI;\n  } else if (window.devicePixelRatio) {\n    ratio = window.devicePixelRatio;\n  }\n  return ratio;\n}\n","const navigator = window.navigator;\n\n/**\n * @memberof misc\n */\nexport const isMobile = {\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  isAndroid() {\n    return !!navigator.userAgent.match(/Android/i);\n  },\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  isBlackBerry() {\n    return !!navigator.userAgent.match(/BlackBerry/i);\n  },\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  isiOS() {\n    return !!navigator.userAgent.match(/iPhone|iPad|iPod/i);\n  },\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  isOpera() {\n    return !!navigator.userAgent.match(/Opera Mini/i);\n  },\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  isWindows() {\n    return (\n      !!navigator.userAgent.match(/IEMobile/i) ||\n      !!navigator.userAgent.match(/WPDesktop/i)\n    );\n  },\n  /**\n   * @private\n   * @returns {boolean}\n   */\n  any() {\n    return (\n      this.isAndroid() ||\n      this.isBlackBerry() ||\n      this.isiOS() ||\n      this.isOpera() ||\n      this.isWindows()\n    );\n  }\n};\n","/**\n * Misc utilities module.\n * @module\n */\nexport * from \"./misc/getDevicePixelRatio\";\nexport * from \"./misc/IsMobile\";\n","import { lerp } from \"../math/lerp\";\n\nfunction deCasteljau(points, t) {\n  const calculatedPoints = [];\n\n  for (let i = 1; i < points.length; i++) {\n    const value = lerp(points[i - 1], points[i], t);\n    calculatedPoints.push(value);\n  }\n\n  return calculatedPoints;\n}\n\n/**\n * Calculates a point on the curve, for a given t value between 0 and 1.\n *\n * @memberof splines\n *\n * @param {number[]} points - Array of control points for the curve.\n * @param {number} t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\n *\n * @returns {number}\n */\nexport function bezierValue(points, t) {\n  if (t === 0 || points.length === 1) {\n    return points[0];\n  }\n\n  if (t === 1) {\n    return points[points.length - 1];\n  }\n\n  return bezierValue(deCasteljau(points, t), t);\n}\n\n/**\n * Calculates the curve tangent at the specified t value.\n *\n * @memberof splines\n *\n * @param {number[]} points - Array of control points for the curve.\n * @param {number} t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\n *\n * @returns {number[]}\n */\nexport function bezierDerivative(points, t) {\n  if (points.length === 1) {\n    return [points[0], points[0]];\n  }\n\n  if (points.length === 2) {\n    return [points[0], points[1]];\n  }\n\n  const deCa = deCasteljau(points, t);\n\n  if (deCa.length === 2) {\n    return deCa;\n  }\n\n  return bezierDerivative(deCa, t);\n}\n","function catmullRom(p1, p2, p3, p4, t) {\n  const squared = t * t;\n  const cubed = t * t * t;\n\n  const f1 = -0.5 * cubed + squared - 0.5 * t;\n  const f2 = 1.5 * cubed - 2.5 * squared + 1.0;\n  const f3 = -1.5 * cubed + 2.0 * squared + 0.5 * t;\n  const f4 = 0.5 * cubed - 0.5 * squared;\n\n  return p1 * f1 + p2 * f2 + p3 * f3 + p4 * f4;\n}\n\n// function catmullRomDerivative(p1, p2, p3, p4, t) {\n//   const squared = t * t;\n//   return p2 + 2 * p3 * t + 3 * p4 * squared;\n// }\n\n/**\n * Calculates a point on the curve, for a given t value between 0 and 1.\n *\n * @memberof splines\n *\n * @param {number[]} points - Array of control points for the curve.\n * @param {number} t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\n *\n * @returns {number}\n * TODO: Write tests to confirm it works as intended.\n */\nexport function catmullRomValue(points, t) {\n  if (points.length < 4) {\n    return 0;\n  }\n\n  // TODO: Make it work with any number of points.\n\n  return catmullRom(points[0], points[1], points[2], points[3], t);\n}\n\nconsole.warn(\"Function 'catmullRomValue' is incomplete. Use at own risk.\");\n","/**\n * Calculates a point on the curve, for a given t value between 0 and 1.\n *\n * @memberof splines\n *\n * @param {number[]} points - Array of control points for the curve.\n * @param {number} t - A value between 0 and 1. 0 is the beginning of the curve, 1 is the end.\n *\n * @returns {number}\n * TODO: Write tests to confirm it works as intended.\n */\nexport function hermite(points, t) {\n  const squared = t * t;\n  const cubed = t * squared;\n  const part1 = 2.0 * cubed - 3.0 * squared + 1.0;\n  const part2 = -2.0 * cubed + 3.0 * squared;\n  const part3 = cubed - 2.0 * squared + t;\n  const part4 = cubed - squared;\n\n  return (\n    points[0] * part1 +\n    points[2] * part2 +\n    points[1] * part3 +\n    points[3] * part4\n  );\n}\n\nconsole.warn(\"Function 'hermite' is incomplete. Use at own risk.\");\n","/**\n * Spline utilities module.\n * @module\n */\nexport * from \"./splines/bezier\";\nexport * from \"./splines/catmullRom\";\nexport * from \"./splines/hermite\";\n","/**\n * Adds two vectors and returns the result.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {{ x: number, y: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function add(vector1, vector2) {\n  return {\n    x: vector1.x + vector2.x,\n    y: vector1.y + vector2.y\n  };\n}\n","/**\n * Returns the distance between two vectors.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - Point1 position.\n * @param {{ x: number, y: number }} vector2 - Point2 position.\n *\n * @returns {number}\n */\nexport function distance(vector1, vector2) {\n  const x = Math.abs(vector1.x - vector2.x);\n  const y = Math.abs(vector1.y - vector2.y);\n\n  const x2 = x ** 2;\n  const y2 = y ** 2;\n\n  return Math.sqrt(x2 + y2);\n}\n","/**\n * Divides two vectors and returns the result.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {{ x: number, y: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function divide(vector1, vector2) {\n  return {\n    x: vector1.x / vector2.x,\n    y: vector1.y / vector2.y\n  };\n}\n","/**\n * Returns the dot product of two vectors.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {{ x: number, y: number }} vector2 - Second vector.\n *\n * @returns {number}\n */\nexport function dot(vector1, vector2) {\n  return vector1.x * vector2.x + vector1.y * vector2.y;\n}\n","import { dot } from \"./dot\";\n/**\n * Returns length of a vector.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector - Vector.\n *\n * @returns {number}\n */\nexport function length(vector) {\n  return Math.sqrt(dot(vector, vector));\n}\n","/**\n * Multiplies two vectors and returns the result.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {{ x: number, y: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function multiply(vector1, vector2) {\n  return {\n    x: vector1.x * vector2.x,\n    y: vector1.y * vector2.y\n  };\n}\n","/**\n * Returns the negated coordinated of a vector.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector - Vector to negate.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function negate(vector) {\n  return {\n    x: -vector.x === -0 ? 0 : -vector.x,\n    y: -vector.y === -0 ? 0 : -vector.y\n  };\n}\n","/**\n * Checks for intersection between two vectors.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {number} size1 - First size;\n * @param {{ x: number, y: number }} vector2 - Second vector.\n * @param {number} size2 - Second size.\n *\n * @returns {boolean}\n */\nexport function pointIntersection(vector1, size1, vector2, size2) {\n  return (\n    (vector2.x - vector1.x) ** 2 + (vector1.y - vector2.y) ** 2 <=\n    (size1 + size2) ** 2\n  );\n}\n","const PRECISION = 100000000;\nconst roundToPrecision = value => Math.round(value * PRECISION) / PRECISION;\n\n/**\n * Returns a vector positioned around another vector.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector - Center point position.\n * @param {number} distance - Distance from the center point.\n * @param {number} radian - Radian value.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function positionAroundVector2(vector, distance, radian) {\n  const xAxis = roundToPrecision(Math.cos(radian));\n  const yAxis = roundToPrecision(Math.sin(radian));\n\n  return {\n    x: vector.x + distance * xAxis,\n    y: vector.y + distance * yAxis\n  };\n}\n","/**\n * Scales a vector by a value.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector - Vector to scale.\n * @param {number} value - Value to scale by.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function scale(vector, value) {\n  return {\n    x: vector.x * value,\n    y: vector.y * value\n  };\n}\n","/**\n * Subtracts two vectors and returns the result.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector1 - First vector.\n * @param {{ x: number, y: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number }}\n */\nexport function subtract(vector1, vector2) {\n  return {\n    x: vector1.x - vector2.x,\n    y: vector1.y - vector2.y\n  };\n}\n","/**\n * Loops through the dimensions of a vector.\n * Starts at zero, so keep in mind that the number of callbacks will be the dimension sizes +1;\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number }} vector - Vector to traverse.\n * @param {function({ x: number, y: number })} callback - Callback for each step.\n * @param {number?} step - Step size (default: 1).\n */\nexport function traverse(vector, callback, step = 1) {\n  for (let x = 0; x <= vector.x; x += step) {\n    for (let y = 0; y <= vector.y; y += step) {\n      callback({ x, y });\n    }\n  }\n}\n","/**\n * Vector2 utilities module.\n * @module\n */\nexport * from \"./vector2/add\";\nexport * from \"./vector2/distance\";\nexport * from \"./vector2/divide\";\nexport * from \"./vector2/dot\";\nexport * from \"./vector2/length\";\nexport * from \"./vector2/multiply\";\nexport * from \"./vector2/negate\";\nexport * from \"./vector2/pointIntersection\";\nexport * from \"./vector2/positionAroundVector2\";\nexport * from \"./vector2/scale\";\nexport * from \"./vector2/subtract\";\nexport * from \"./vector2/traverse\";\n","/**\n * Adds two vectors and returns the result.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function add(vector1, vector2) {\n  return {\n    x: vector1.x + vector2.x,\n    y: vector1.y + vector2.y,\n    z: vector1.z + vector2.z\n  };\n}\n","/**\n * Returns the distance between two vectors.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - Point1 position.\n * @param {{ x: number, y: number, z: number }} vector2 - Point2 position.\n *\n * @returns {number}\n */\nexport function distance(vector1, vector2) {\n  const x = Math.abs(vector1.x - vector2.x);\n  const y = Math.abs(vector1.y - vector2.y);\n  const z = Math.abs(vector1.z - vector2.z);\n\n  const x2 = x ** 2;\n  const y2 = y ** 2;\n  const z2 = z ** 2;\n\n  return Math.sqrt(x2 + y2 + z2);\n}\n","/**\n * Divides two vectors and returns the result.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function divide(vector1, vector2) {\n  return {\n    x: vector1.x / vector2.x,\n    y: vector1.y / vector2.y,\n    z: vector1.z / vector2.z\n  };\n}\n","/**\n * Returns the dot product of two vectors.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n *\n * @returns {number}\n */\nexport function dot(vector1, vector2) {\n  return vector1.x * vector2.x + vector1.y * vector2.y + vector1.z * vector2.z;\n}\n","import { dot } from \"./dot\";\n/**\n * Returns length of a vector.\n *\n * @memberof vector2\n *\n * @param {{ x: number, y: number, z: number }} vector - Vector.\n *\n * @returns {number}\n */\nexport function length(vector) {\n  return Math.sqrt(dot(vector, vector));\n}\n","/**\n * Multiplies two vectors and returns the result.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function multiply(vector1, vector2) {\n  return {\n    x: vector1.x * vector2.x,\n    y: vector1.y * vector2.y,\n    z: vector1.z * vector2.z\n  };\n}\n","/**\n * Returns the negated coordinates of a vector.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector - Vector to negate.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function negate(vector) {\n  return {\n    x: -vector.x === -0 ? 0 : -vector.x,\n    y: -vector.y === -0 ? 0 : -vector.y,\n    z: -vector.z === -0 ? 0 : -vector.z\n  };\n}\n","/**\n * Checks for intersection between two vectors.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {number} size1 - First size.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n * @param {number} size2 - Second size.\n *\n * @returns {boolean}\n */\nexport function pointIntersection(vector1, size1, vector2, size2) {\n  return (\n    (vector1.x - vector2.x) ** 2 +\n      (vector1.y - vector2.y) ** 2 +\n      (vector1.z - vector2.z) ** 2 <=\n    (size1 + size2) ** 2\n  );\n}\n","const PRECISION = 100000000;\nconst roundToPrecision = value => Math.round(value * PRECISION) / PRECISION;\n\n/**\n * Returns a vector positioned around another vector.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector - Center point position.\n * @param {number} distance - Distance from the center point.\n * @param {number} vertical - Vertical radian value.\n * @param {number} horizontal - Horizontal radian value.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function positionAroundVector3(vector, distance, vertical, horizontal) {\n  const xAxis = roundToPrecision(Math.cos(vertical) * Math.cos(horizontal));\n  const yAxis = roundToPrecision(Math.sin(vertical));\n  const zAxis = roundToPrecision(Math.cos(vertical) * Math.sin(horizontal));\n\n  return {\n    x: vector.x + distance * xAxis,\n    y: vector.y + distance * yAxis,\n    z: vector.z + distance * zAxis\n  };\n}\n","/**\n * Scales a vector by a value.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector - Vector to scale.\n * @param {number} value - Value to scale by.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function scale(vector, value) {\n  return {\n    x: vector.x * value,\n    y: vector.y * value,\n    z: vector.z * value\n  };\n}\n","/**\n * Subtracts two vectors and returns the result.\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector1 - First vector.\n * @param {{ x: number, y: number, z: number }} vector2 - Second vector.\n *\n * @returns {{ x: number, y: number, z: number }}\n */\nexport function subtract(vector1, vector2) {\n  return {\n    x: vector1.x - vector2.x,\n    y: vector1.y - vector2.y,\n    z: vector1.z - vector2.z\n  };\n}\n","/**\n * Loops through the dimensions of a vector.\n * Starts at zero, so keep in mind that the number of callbacks will be the dimension sizes +1;\n *\n * @memberof vector3\n *\n * @param {{ x: number, y: number, z: number }} vector - Vector to traverse.\n * @param {function({ x: number, y: number, z: number })} callback - Callback for each step.\n * @param {number?} step - Step size (default: 1).\n */\nexport function traverse(vector, callback, step = 1) {\n  for (let x = 0; x <= vector.x; x += step) {\n    for (let y = 0; y <= vector.y; y += step) {\n      for (let z = 0; z <= vector.z; z += step) {\n        callback({ x, y, z });\n      }\n    }\n  }\n}\n","/**\n * Vector2 utilities module.\n * @module\n */\nexport * from \"./vector3/add\";\nexport * from \"./vector3/distance\";\nexport * from \"./vector3/divide\";\nexport * from \"./vector3/dot\";\nexport * from \"./vector3/length\";\nexport * from \"./vector3/multiply\";\nexport * from \"./vector3/negate\";\nexport * from \"./vector3/pointIntersection\";\nexport * from \"./vector3/positionAroundVector3\";\nexport * from \"./vector3/scale\";\nexport * from \"./vector3/subtract\";\nexport * from \"./vector3/traverse\";\n","import * as animation from \"./animation\";\nimport * as array from \"./array\";\nimport * as color from \"./color\";\nimport * as dom from \"./dom\";\nimport * as interactivity from \"./interactivity\";\nimport * as math from \"./math\";\nimport * as misc from \"./misc\";\nimport * as splines from \"./splines\";\nimport * as vector2 from \"./vector2\";\nimport * as vector3 from \"./vector3\";\n\nexport default {\n  animation,\n  array,\n  color,\n  dom,\n  interactivity,\n  math,\n  misc,\n  splines,\n  vector2,\n  vector3\n};\n"],"names":["dot","PRECISION","roundToPrecision"],"mappings":"AAAA;;;;;;;;;AASA,gBAAuB,CAAC;IACtB,OAAO,CAAC,CAAC;CACV;;ACXD;;;;;;;;;AASA,oBAA2B,CAAC;IAC1B,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;CAC7C;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;CACpC;;ACXD;;;;;;;;;AASA,uBAA8B,CAAC;IAC7B,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CAC3C;;ACXD;;;;;;;;;AASA,oBAA2B,CAAC;IAC1B,OAAO,CAAC,GAAG,CAAC,CAAC;CACd;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;CACpB;;ACXD;;;;;;;;;AASA,uBAA8B,CAAC;IAC7B,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;CACnD;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAClB;;ACXD;;;;;;;;;AASA,sBAA6B,CAAC;IAC5B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;CACzB;;ACZD;;;;;;;;;AASA,wBAA+B,CAAC;IAC9B,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;CAC1E;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CACtB;;ACXD;;;;;;;;;AASA,sBAA6B,CAAC;IAC5B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC9B;;ACZD;;;;;;;;;AASA,wBAA+B,CAAC;IAC9B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAChE;;ACZD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAC1B;;ACXD;;;;;;;;;AASA,sBAA6B,CAAC;IAC5B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CACnC;;ACZD;;;;;;;;;AASA,wBAA+B,CAAC;IAC9B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC3E;;ACZD;;;;;;;;;AASA,oBAA2B,CAAC;IAC1B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,SAAA,CAAC,GAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC;CAC1C;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,SAAA,CAAC,GAAK,CAAC,EAAE,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC;CAC5C;;ACXD;;;;;;;;;AASA,uBAA8B,CAAC;IAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACtB,OAAO,CAAC,CAAC;KACV;IAED,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChB,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEhB,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,OAAO,GAAG,GAAG,SAAA,CAAC,GAAK,EAAE,GAAG,CAAC,EAAC,CAAC;KAC5B;IAED,OAAO,GAAG,IAAI,EAAE,SAAA,CAAC,GAAK,CAAC,EAAE,GAAG,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CACtC;;ACtBD;;;;;;;;;AASA,oBAA2B,CAAC;IAC1B,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CACxC;;ACXD;;;;;;;;;AASA,qBAA4B,CAAC;IAC3B,IAAM,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;IACjB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;CAC/B;;ACZD;;;;;;;;;AASA,uBAA8B,CAAC;IAC7B,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChB,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAEhB,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,OAAO,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;KAC1C;IAED,OAAO,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;CACzC;;AClBD;;;;AAIA,AAqBuC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBvC;;;;;;;;;;;AAWA,oBACE,UAAU,EACV,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,MAAe;IAAf,uBAAA,EAAA,eAAe;IAEf,IAAI,cAAc,CAAC;IACnB,IAAI,SAAS,CAAC;IACd,IAAI,KAAK,GAAG,UAAU,CAAC;IAEvB;QACE,MAAM,CAAC,oBAAoB,CAAC,cAAc,CAAC,CAAC;QAC5C,KAAK,GAAG,QAAQ,CAAC;KAClB;IAED,mBAAmB,QAAQ;QACzB,IAAM,IAAI,GAAG,QAAQ,GAAG,UAAU,CAAC;QACnC,KAAK,GAAG,MAAM,CAAC,QAAQ,GAAG,QAAQ,GAAG,IAAI,GAAG,UAAU,CAAC,CAAC;QACxD,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,IAAI,EAAE,CAAC;SACR;KACF;IAED,mBAAmB,QAAQ;QACzB,IAAM,IAAI,GAAG,UAAU,GAAG,QAAQ,CAAC;QACnC,KAAK,GAAG,MAAM,CAAC,QAAQ,GAAG,QAAQ,GAAG,CAAC,IAAI,GAAG,UAAU,CAAC,CAAC;QACzD,IAAI,KAAK,IAAI,QAAQ,EAAE;YACrB,IAAI,EAAE,CAAC;SACR;KACF;IAED,cAAc,SAAS;QACrB,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QAEpD,IAAI,CAAC,SAAS,EAAE;YACd,SAAS,GAAG,SAAS,CAAC;SACvB;QAED,IAAM,QAAQ,GAAG,SAAS,GAAG,SAAS,CAAC;QACvC,CAAC,UAAU,GAAG,QAAQ,GAAG,SAAS,GAAG,SAAS,EAAE,QAAQ,CAAC,CAAC;QAE1D,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;YAClC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjB;KACF;IAED,IAAI,UAAU,KAAK,QAAQ,EAAE;QAC3B,cAAc,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;KACrD;SAAM;QACL,QAAQ,CAAC,KAAK,CAAC,CAAC;KACjB;CACF;;;;;;;;;ACjED;;;;;;;;;;;;;;AAcA,0BAAiC,KAAK,EAAE,MAAM;IAC5C,OAAO,KAAK,CAAC,MAAM,CACjB,UAAC,QAAQ,EAAE,OAAO;QAChB,OAAA,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,MAAM,CAAC;cACpD,OAAO;cACP,QAAQ;KAAA,CACf,CAAC;CACH;;ACrBD;;;;;;;;;;;;;;AAcA,qBAA4B,KAAK,EAAE,SAAS;IAC1C,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;QACtB,OAAO,EAAE,CAAC;KACX;IAED,OAAO,KAAK;SACT,KAAK,CAAC,CAAC,CAAC;SACR,MAAM,CAAC,UAAC,GAAG,EAAE,GAAG,IAAK,OAAA,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,GAAA,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;CACnE;;ACtBD;;;;;;;;;;;;;AAaA,yBAAgC,QAAQ;IACtC,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;CAC7C;;ACfD;;;;AAIA,AAEwC;;;;;;;;;ACNxC;;;;;;;;;;AAUA,mBAA0B,GAAG;IAC3B,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;IAC3B,IAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5C,IAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAC5C,IAAM,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IAE5C,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QACpB,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;KACpB;SAAM,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;QAC3B,OAAO;YACL,CAAC,GAAA;YACD,CAAC,GAAA;YACD,CAAC,GAAA;YACD,CAAC,EAAE,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;SACrC,CAAC;KACH;IACD,OAAO,IAAI,CAAC;CACb;;AC3BD,iBAAiB,CAAC,EAAE,CAAC,EAAE,CAAC;IACtB,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,CAAC,CAAC;KACR;IAED,IAAI,CAAC,GAAG,CAAC,EAAE;QACT,CAAC,IAAI,CAAC,CAAC;KACR;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC5B;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACb,OAAO,CAAC,CAAC;KACV;IAED,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACb,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;KACtC;IAED,OAAO,CAAC,CAAC;CACV;;;;;;;;;;;;;;;AAgBD,kBAAyB,CAAC,EAAE,CAAC,EAAE,CAAC;IAC9B,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,CAAC;IACN,IAAI,CAAC,CAAC;IAEN,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAG,CAAC,CAAC;KACP;SAAM;QACL,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChD,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACpB,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7B,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACrB,CAAC,GAAG,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KAC9B;IAED,OAAO;QACL,CAAC,EAAE,CAAC,GAAG,GAAG;QACV,CAAC,EAAE,CAAC,GAAG,GAAG;QACV,CAAC,EAAE,CAAC,GAAG,GAAG;KACX,CAAC;CACH;;AC5DD,wBAAwB,CAAC;IACvB,IAAM,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3B,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,GAAG,MAAI,GAAK,GAAG,GAAG,CAAC;CAC3C;;;;;;;;;;;;;AAcD,mBAA0B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAClC,IAAM,GAAG,GAAG,OAAI,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAE,CAAC;IAC5E,OAAO,CAAC,KAAK,SAAS,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;CACxD;;ACpBD,aAAa,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;IAC1B,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,IAAI,CAAC,KAAK,GAAG,EAAE;QACb,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;KACnC;SAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrB;SAAM,IAAI,CAAC,KAAK,GAAG,EAAE;QACpB,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACrB;IAED,OAAO,CAAC,GAAG,CAAC,CAAC;CACd;;;;;;;;;;;;;;;AAgBD,kBAAyB,GAAG,EAAE,KAAK,EAAE,IAAI;IACvC,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IACpB,IAAM,CAAC,GAAG,KAAK,GAAG,GAAG,CAAC;IACtB,IAAM,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC;IAErB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC9B,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE9B,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;IAE1B,IAAI,GAAG,KAAK,GAAG,EAAE;QACf,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC;KAC1B;IAED,IAAM,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC;IACpB,IAAM,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IAClD,IAAM,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE/B,OAAO,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;CACpB;;AC/CD;;;;AAIA,AAGiC;;;;;;;;;;ACPjC;;;;;;;;;;AAUA,uCAA8C,OAAO,EAAE,SAAS;IAC9D,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,IAAI,GAAG,CAAC,CAAC;IAEb,GAAG;QACD,GAAG,IAAI,OAAO,CAAC,SAAS,IAAI,CAAC,CAAC;QAC9B,IAAI,IAAI,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC;QAChC,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC;KAChC,QAAQ,OAAO,IAAI,OAAO,KAAK,SAAS,EAAE;IAE3C,OAAO,EAAE,IAAI,MAAA,EAAE,GAAG,KAAA,EAAE,CAAC;CACtB;;ACnBD;;;;;;;;;AASA,oCAA2C,OAAO;IAChD,OAAO,6BAA6B,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;CAC9D;;ACbD;;;;AAIA,AACoD;;;;;;;;ACLpD;;;;AAIA;IAqBE,yBAAmB,OAAoB;QAnBhC,WAAM,GAAG,CAAC,CAAC;QACX,WAAM,GAAG,CAAC,CAAC;QACX,aAAQ,GAAG,CAAC,CAAC;QACb,aAAQ,GAAG,CAAC,CAAC;QACb,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,gBAAW,GAAG,CAAC,CAAC;QAChB,gBAAW,GAAG,CAAC,CAAC;QAChB,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QACd,sBAAiB,GAAG,CAAC,CAAC;QACtB,sBAAiB,GAAG,CAAC,CAAC;QACtB,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,CAAC,CAAC;QACT,cAAS,GAAG,CAAC,CAAC;QACd,cAAS,GAAG,CAAC,CAAC;QAGnB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;KACxB;IAEM,+BAAK,GAAZ,UAAa,CAAS,EAAE,CAAS;QAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;KAC9B;IAEM,gCAAM,GAAb,UAAc,CAAS,EAAE,CAAS;QAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC;KAChC;IAEM,6BAAG,GAAV,UAAW,CAAS,EAAE,CAAS;QAC7B,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;KACf;IAEO,qCAAW,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC;KAC9C;IAEO,uCAAa,GAArB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;QAC7D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC;KAC/D;IAEO,qCAAW,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC;KAC1D;IAEO,qCAAW,GAAnB;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAChD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;KACjD;IACH,sBAAC;CAAA;;ACvED;;;;;;;;;;;AAWA,4BAAmC,OAAO,EAAE,SAAS;IACnD,IAAM,IAAI,GAAG,IAAI,eAAe,CAAC,OAAO,CAAC,CAAC;IAE1C,eAAe,KAAK,EAAE,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACjB,IAAI,OAAO,SAAS,CAAC,OAAO,KAAK,UAAU,EAAE;YAC3C,SAAS,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAChC;KACF;IAED,gBAAgB,KAAK,EAAE,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB,IAAI,OAAO,SAAS,CAAC,MAAM,KAAK,UAAU,EAAE;YAC1C,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC/B;KACF;IAED,aAAa,KAAK,EAAE,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACf,IAAI,OAAO,SAAS,CAAC,KAAK,KAAK,UAAU,EAAE;YACzC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;SAC9B;KACF;IAED,IAAM,WAAW,GAAG,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,GAAA,CAAC;IAErD,IAAM,SAAS,GAAG,UAAA,CAAC;QACjB,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACvD,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QACnD,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;KAC1B,CAAC;IAEF,IAAM,WAAW,GAAG,UAAA,CAAC;QACnB,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACpD,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;QAChD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAC;IAEF,IAAM,WAAW,GAAG,UAAA,CAAC,IAAI,OAAA,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAA,CAAC;IAE3E,IAAM,UAAU,GAAG,UAAA,CAAC;QAClB,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACvD,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QACrD,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KAChD,CAAC;IAEF,IAAM,YAAY,GAAG,UAAA,CAAC;QACpB,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;QACpD,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;QAClD,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KAClD,CAAC;IAEF,OAAO,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACnD,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;CACtD;;ACnED;;;;AAIA,AAAmD;;;;;;;ACJnD;;;;;;;;AAQA,kBAAyB,GAAG,EAAE,KAAK;IACjC,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE;QAC/B,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,KAAK,CAAC;CACd;;ACbD;;;;;;;;AAQA,kBAAyB,GAAG,EAAE,KAAK;IACjC,IAAI,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,EAAE;QAC/B,OAAO,GAAG,CAAC;KACZ;IACD,OAAO,KAAK,CAAC;CACd;;ACVD;;;;;;;;;;;;;;;;;;AAkBA,eAAsB,KAAK,EAAE,GAAG,EAAE,GAAG;IACnC,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC7B,KAAK,GAAG,QAAQ,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IAC7B,OAAO,KAAK,CAAC;CACd;;ACzBD;;;;;;;;;;;;AAYA,uBAA8B,KAAK;IACjC,IAAM,KAAK,GAAG,CAAA,KAAG,KAAO,EAAC,KAAK,CAAC,kCAAkC,CAAC,CAAC;IAEnE,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,CAAC,CAAC;KACV;IAED,OAAO,IAAI,CAAC,GAAG,CACb,CAAC;;IAED,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;;SAE5B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAC7B,CAAC;CACH;;AC1BD;;;;;;;;;AASA,wBAA+B,MAAM;IACnC,OAAO,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC;CACjC;;ACXD;;;;;;;;;;;;AAYA,iBAAwB,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,SAAa;IAAb,0BAAA,EAAA,aAAa;IACpD,OAAO,KAAK,GAAG,SAAS,IAAI,GAAG,IAAI,KAAK,GAAG,SAAS,IAAI,GAAG,CAAC;CAC7D;;ACdD;;;;;;;;;;;AAWA,cAAqB,KAAK,EAAE,GAAG,EAAE,CAAC;IAChC,OAAO,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,IAAI,CAAC,CAAC;CAClC;;ACbD;;;;;;;;;;;;;AAaA,oBAA2B,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM;IAChE,KAAK,GAAG,CAAC,KAAK,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAEnD,IAAI,KAAK,KAAK,QAAQ,EAAE;QACtB,OAAO,CAAC,CAAC;KACV;IAED,OAAO,QAAQ,GAAG,CAAC,MAAM,GAAG,QAAQ,IAAI,KAAK,CAAC;CAC/C;;ACrBD;;;;;;;;;AASA,wBAA+B,MAAM;IACnC,OAAO,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;CAC/B;;ACXD;;;;;;;;;;;;AAYA,qBAA4B,GAAG,EAAE,GAAG;IAClC,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IAC3C,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;IAC3C,QACE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC;QAClB,IAAI,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,EACzD;CACH;;ACjBD;;;;;;;;;;AAUA,mBAA0B,GAAG,EAAE,GAAG;;;;IAIhC,OAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,cAAc,CAAC,CAAC,CAAC;CACjE;;ACfD,IAAM,iBAAiB,GACrB,gEAAgE,CAAC;;;;;;;;;;;AAYnE,sBAA6B,MAAM,EAAE,UAA8B;IAA9B,2BAAA,EAAA,8BAA8B;IACjE,IAAI,MAAM,GAAG,EAAE,CAAC;IAEhB,OAAO,MAAM,EAAE;QACb,MAAM,IAAI,UAAU,CAAC,SAAS,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,EAAE,CAAC;KACV;IAED,OAAO,MAAM,CAAC;CACf;;ACtBD;;;;;;;;;;AAUA,eAAsB,KAAK,EAAE,KAAS;IAAT,sBAAA,EAAA,SAAS;IACpC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;IAC1C,OAAO,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;CACpD;;ACfD;;;;;;;;;;;AAWA,cAAqB,KAAK,EAAE,GAAG,EAAE,GAAG;IAClC,IAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IAExB,IAAI,GAAG,KAAK,GAAG,EAAE;QACf,OAAO,GAAG,CAAC;KACZ;SAAM,IAAI,KAAK,GAAG,GAAG,EAAE;QACtB,KAAK,GAAG,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC;KAC7B;SAAM;QACL,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,KAAK,CAAC,CAAC;KAC7B;IAED,OAAO,KAAK,GAAG,KAAK,CAAC;CACtB;;ACvBD;;;;AAIA,AAW4B;;;;;;;;;;;;;;;;;;ACf5B,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;;;;;;;;AAS7B;IACE,IAAI,KAAK,GAAG,CAAC,CAAC;;IAEd,IACE,MAAM,CAAC,UAAU;QACjB,MAAM,CAAC,WAAW;QAClB,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAC7B,EAAE;;QAEA,KAAK,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,CAAC;KAChD;SAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE;QAClC,KAAK,GAAG,MAAM,CAAC,gBAAgB,CAAC;KACjC;IACD,OAAO,KAAK,CAAC;CACd;;ACvBD,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;;;;AAKnC,AAAO,IAAM,QAAQ,GAAG;;;;;IAKtB,SAAS;QACP,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;KAChD;;;;;IAKD,YAAY;QACV,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;KACnD;;;;;IAKD,KAAK;QACH,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;KACzD;;;;;IAKD,OAAO;QACL,OAAO,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;KACnD;;;;;IAKD,SAAS;QACP,QACE,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,CAAC;YACxC,CAAC,CAAC,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,YAAY,CAAC,EACzC;KACH;;;;;IAKD,GAAG;QACD,QACE,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,YAAY,EAAE;YACnB,IAAI,CAAC,KAAK,EAAE;YACZ,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,SAAS,EAAE,EAChB;KACH;CACF;;ACzDD;;;;AAIA,AACgC;;;;;;;;ACHhC,qBAAqB,MAAM,EAAE,CAAC;IAC5B,IAAM,gBAAgB,GAAG,EAAE,CAAC;IAE5B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChD,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;IAED,OAAO,gBAAgB,CAAC;CACzB;;;;;;;;;;;AAYD,qBAA4B,MAAM,EAAE,CAAC;IACnC,IAAI,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QAClC,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;KAClB;IAED,IAAI,CAAC,KAAK,CAAC,EAAE;QACX,OAAO,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAClC;IAED,OAAO,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAC/C;;;;;;;;;;;AAYD,0BAAiC,MAAM,EAAE,CAAC;IACxC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;IAED,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;QACvB,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;IAED,IAAM,IAAI,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAEpC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;QACrB,OAAO,IAAI,CAAC;KACb;IAED,OAAO,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;CAClC;;AC7DD,oBAAoB,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACnC,IAAM,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,IAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAExB,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC;IAC5C,IAAM,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC;IAC7C,IAAM,EAAE,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,GAAG,CAAC,CAAC;IAClD,IAAM,EAAE,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC;IAEvC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;CAC9C;;;;;;;;;;;;;;;;AAkBD,yBAAgC,MAAM,EAAE,CAAC;IACvC,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;QACrB,OAAO,CAAC,CAAC;KACV;;IAID,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;CAClE;AAED,OAAO,CAAC,IAAI,CAAC,4DAA4D,CAAC,CAAC;;ACtC3E;;;;;;;;;;;AAWA,iBAAwB,MAAM,EAAE,CAAC;IAC/B,IAAM,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;IACtB,IAAM,KAAK,GAAG,CAAC,GAAG,OAAO,CAAC;IAC1B,IAAM,KAAK,GAAG,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,GAAG,CAAC;IAChD,IAAM,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,CAAC;IAC3C,IAAM,KAAK,GAAG,KAAK,GAAG,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC;IACxC,IAAM,KAAK,GAAG,KAAK,GAAG,OAAO,CAAC;IAE9B,QACE,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;QACjB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;QACjB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK;QACjB,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,EACjB;CACH;AAED,OAAO,CAAC,IAAI,CAAC,oDAAoD,CAAC,CAAC;;AC3BnE;;;;AAIA,AAEkC;;;;;;;;;;ACNlC;;;;;;;;;;AAUA,aAAoB,OAAO,EAAE,OAAO;IAClC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;ACfD;;;;;;;;;;AAUA,kBAAyB,OAAO,EAAE,OAAO;IACvC,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1C,IAAM,EAAE,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAClB,IAAM,EAAE,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAElB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;CAC3B;;AClBD;;;;;;;;;;AAUA,gBAAuB,OAAO,EAAE,OAAO;IACrC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;ACfD;;;;;;;;;;AAUA,aAAoB,OAAO,EAAE,OAAO;IAClC,OAAO,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;CACtD;;ACXD;;;;;;;;;AASA,gBAAuB,MAAM;IAC3B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;CACvC;;ACZD;;;;;;;;;;AAUA,kBAAyB,OAAO,EAAE,OAAO;IACvC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;ACfD;;;;;;;;;AASA,gBAAuB,MAAM;IAC3B,OAAO;QACL,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACpC,CAAC;CACH;;ACdD;;;;;;;;;;;;AAYA,2BAAkC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK;IAC9D,QACE,UAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAK,CAAC,CAAA,GAAG,UAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAK,CAAC,CAAA;QAC3D,UAAC,KAAK,GAAG,KAAK,GAAK,CAAC,CAAA,EACpB;CACH;;ACjBD,IAAM,SAAS,GAAG,SAAS,CAAC;AAC5B,IAAM,gBAAgB,GAAG,UAAA,KAAK,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,GAAG,SAAS,GAAA,CAAC;;;;;;;;;;;;AAa5E,+BAAsC,MAAM,EAAE,QAAQ,EAAE,MAAM;IAC5D,IAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IACjD,IAAM,KAAK,GAAG,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;IAEjD,OAAO;QACL,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK;QAC9B,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK;KAC/B,CAAC;CACH;;ACtBD;;;;;;;;;;AAUA,eAAsB,MAAM,EAAE,KAAK;IACjC,OAAO;QACL,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;QACnB,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;KACpB,CAAC;CACH;;ACfD;;;;;;;;;;AAUA,kBAAyB,OAAO,EAAE,OAAO;IACvC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;ACfD;;;;;;;;;;AAUA,kBAAyB,MAAM,EAAE,QAAQ,EAAE,IAAQ;IAAR,qBAAA,EAAA,QAAQ;IACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;YACxC,QAAQ,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,CAAC;SACpB;KACF;CACF;;AChBD;;;;AAIA,AAWmC;;;;;;;;;;;;;;;;;;ACfnC;;;;;;;;;;AAUA,eAAoB,OAAO,EAAE,OAAO;IAClC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;AChBD;;;;;;;;;;AAUA,oBAAyB,OAAO,EAAE,OAAO;IACvC,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1C,IAAM,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;IAE1C,IAAM,EAAE,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAClB,IAAM,EAAE,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAClB,IAAM,EAAE,GAAG,SAAA,CAAC,EAAI,CAAC,CAAA,CAAC;IAElB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;CAChC;;ACpBD;;;;;;;;;;AAUA,kBAAuB,OAAO,EAAE,OAAO;IACrC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;AChBD;;;;;;;;;;AAUA,eAAoB,OAAO,EAAE,OAAO;IAClC,OAAO,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;CAC9E;;ACXD;;;;;;;;;AASA,kBAAuB,MAAM;IAC3B,OAAO,IAAI,CAAC,IAAI,CAACA,KAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;CACvC;;ACZD;;;;;;;;;;AAUA,oBAAyB,OAAO,EAAE,OAAO;IACvC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;AChBD;;;;;;;;;AASA,kBAAuB,MAAM;IAC3B,OAAO;QACL,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACnC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;KACpC,CAAC;CACH;;ACfD;;;;;;;;;;;;AAYA,6BAAkC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK;IAC9D,QACE,UAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAK,CAAC,CAAA;QAC1B,UAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAK,CAAC,CAAA;QAC5B,UAAC,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,GAAK,CAAC,CAAA;QAC9B,UAAC,KAAK,GAAG,KAAK,GAAK,CAAC,CAAA,EACpB;CACH;;ACnBD,IAAMC,WAAS,GAAG,SAAS,CAAC;AAC5B,IAAMC,kBAAgB,GAAG,UAAA,KAAK,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,KAAK,GAAGD,WAAS,CAAC,GAAGA,WAAS,GAAA,CAAC;;;;;;;;;;;;;AAc5E,+BAAsC,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU;IAC1E,IAAM,KAAK,GAAGC,kBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAC1E,IAAM,KAAK,GAAGA,kBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnD,IAAM,KAAK,GAAGA,kBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;IAE1E,OAAO;QACL,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK;QAC9B,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK;QAC9B,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,QAAQ,GAAG,KAAK;KAC/B,CAAC;CACH;;ACzBD;;;;;;;;;;AAUA,iBAAsB,MAAM,EAAE,KAAK;IACjC,OAAO;QACL,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;QACnB,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;QACnB,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,KAAK;KACpB,CAAC;CACH;;AChBD;;;;;;;;;;AAUA,oBAAyB,OAAO,EAAE,OAAO;IACvC,OAAO;QACL,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;QACxB,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KACzB,CAAC;CACH;;AChBD;;;;;;;;;;AAUA,oBAAyB,MAAM,EAAE,QAAQ,EAAE,IAAQ;IAAR,qBAAA,EAAA,QAAQ;IACjD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;QACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;YACxC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE;gBACxC,QAAQ,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC,CAAC;aACvB;SACF;KACF;CACF;;AClBD;;;;AAIA,AAWmC;;;;;;;;;;;;;;;;;;ACJnC,YAAe;IACb,SAAS,WAAA;IACT,KAAK,OAAA;IACL,KAAK,OAAA;IACL,GAAG,KAAA;IACH,aAAa,eAAA;IACb,IAAI,MAAA;IACJ,IAAI,MAAA;IACJ,OAAO,SAAA;IACP,OAAO,SAAA;IACP,OAAO,SAAA;CACR,CAAC;;;;"}